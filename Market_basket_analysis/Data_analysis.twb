<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Association_Rules (grocery_analysis_output)' inline='true' name='federated.0pqp8wr14k03y81bjq73c1s31zhv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='grocery_analysis_output' name='excel-direct.1xdidtl0xtry5a18ai0b40hywgv7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/varad/Downloads/Data_analytics/Groceries dataset for Market Basket Analysis/Preprocessed_data/grocery_analysis_output.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1xdidtl0xtry5a18ai0b40hywgv7' name='Association_Rules' table='[Association_Rules$]' type='table'>
          <columns gridOrigin='A1:N114:no:A1:N114:0' header='yes' outcome='6'>
            <column datatype='string' name='antecedents' ordinal='0' />
            <column datatype='string' name='consequents' ordinal='1' />
            <column datatype='real' name='antecedent support' ordinal='2' />
            <column datatype='real' name='consequent support' ordinal='3' />
            <column datatype='real' name='support' ordinal='4' />
            <column datatype='real' name='confidence' ordinal='5' />
            <column datatype='real' name='lift' ordinal='6' />
            <column datatype='real' name='representativity' ordinal='7' />
            <column datatype='real' name='leverage' ordinal='8' />
            <column datatype='real' name='conviction' ordinal='9' />
            <column datatype='real' name='zhangs_metric' ordinal='10' />
            <column datatype='real' name='jaccard' ordinal='11' />
            <column datatype='real' name='certainty' ordinal='12' />
            <column datatype='real' name='kulczynski' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N114:no:A1:N114:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>antecedents</remote-name>
            <remote-type>130</remote-type>
            <local-name>[antecedents]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>antecedents</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consequents</remote-name>
            <remote-type>130</remote-type>
            <local-name>[consequents]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>consequents</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>antecedent support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[antecedent support]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>antecedent support</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consequent support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[consequent support]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>consequent support</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[support]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>support</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>confidence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[confidence]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>confidence</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lift</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lift]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>lift</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>representativity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[representativity]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>representativity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>leverage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[leverage]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>leverage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conviction</remote-name>
            <remote-type>5</remote-type>
            <local-name>[conviction]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>conviction</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zhangs_metric</remote-name>
            <remote-type>5</remote-type>
            <local-name>[zhangs_metric]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>zhangs_metric</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jaccard</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jaccard]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>jaccard</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>certainty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[certainty]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>certainty</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kulczynski</remote-name>
            <remote-type>5</remote-type>
            <local-name>[kulczynski]</local-name>
            <parent-name>[Association_Rules]</parent-name>
            <remote-alias>kulczynski</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rule' datatype='string' name='[Calculation_1310266052546838531]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(REPLACE(STR([antecedents]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot;}&quot;, &quot;&quot;) + &#13;&#10;&quot; → &quot; + &#13;&#10;REPLACE(REPLACE(REPLACE(REPLACE(STR([consequents]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot;}&quot;, &quot;&quot;)' />
      </column>
      <column caption='Antecedent' datatype='string' name='[Calculation_1499417236592562176]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(STR([antecedents]), &quot;frozenset({&apos;&quot;, &quot;&quot;), &quot;&apos;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;)' />
      </column>
      <column caption='consequent' datatype='string' name='[Calculation_1499417236592656385]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(STR([consequents]), &quot;frozenset({&apos;&quot;, &quot;&quot;), &quot;&apos;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;)' />
      </column>
      <column caption='Association_Rules' datatype='table' name='[__tableau_internal_object_id__].[Association!Rules_2CC3D2A27307477FBF9862D983F5FF10]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Antecedent Support' datatype='real' name='[antecedent support]' role='measure' type='quantitative' />
      <column caption='Antecedents' datatype='string' name='[antecedents]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Certainty' datatype='real' name='[certainty]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Confidence' datatype='real' name='[confidence]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Consequent Support' datatype='real' name='[consequent support]' role='measure' type='quantitative' />
      <column caption='Consequents' datatype='string' name='[consequents]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Conviction' datatype='real' name='[conviction]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Jaccard' datatype='real' name='[jaccard]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Kulczynski' datatype='real' name='[kulczynski]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Leverage' datatype='real' name='[leverage]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Lift' datatype='real' name='[lift]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Representativity' datatype='real' name='[representativity]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Support' datatype='real' name='[support]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Zhangs Metric' datatype='real' name='[zhangs_metric]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1310266052546838531]' derivation='None' name='[none:Calculation_1310266052546838531:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1310266052546838531:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;chewing gum → yogurt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rule: chewing gum → yogurt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;oil → soda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rule: oil → soda&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;herbs → yogurt&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rule: herbs → yogurt&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Rule: seasonal products → rolls/buns&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;seasonal products → rolls/buns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;processed cheese → rolls/buns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rule: processed cheese → rolls/buns&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rule: soft cheese → yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;soft cheese → yogurt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;flour → tropical fruit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rule: flour → tropical fruit&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;packaged fruit/vegetables → rolls/buns&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Rule: packaged fruit/vegetables → rolls/buns&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;detergent → yogurt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rule: detergent → yogurt&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;processed cheese → root vegetables&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rule: processed cheese → root vegetables&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Association_Rules' id='Association!Rules_2CC3D2A27307477FBF9862D983F5FF10'>
            <properties context=''>
              <relation connection='excel-direct.1xdidtl0xtry5a18ai0b40hywgv7' name='Association_Rules' table='[Association_Rules$]' type='table'>
                <columns gridOrigin='A1:N114:no:A1:N114:0' header='yes' outcome='6'>
                  <column datatype='string' name='antecedents' ordinal='0' />
                  <column datatype='string' name='consequents' ordinal='1' />
                  <column datatype='real' name='antecedent support' ordinal='2' />
                  <column datatype='real' name='consequent support' ordinal='3' />
                  <column datatype='real' name='support' ordinal='4' />
                  <column datatype='real' name='confidence' ordinal='5' />
                  <column datatype='real' name='lift' ordinal='6' />
                  <column datatype='real' name='representativity' ordinal='7' />
                  <column datatype='real' name='leverage' ordinal='8' />
                  <column datatype='real' name='conviction' ordinal='9' />
                  <column datatype='real' name='zhangs_metric' ordinal='10' />
                  <column datatype='real' name='jaccard' ordinal='11' />
                  <column datatype='real' name='certainty' ordinal='12' />
                  <column datatype='real' name='kulczynski' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='grocery_analysis_output' inline='true' name='federated.0xpxc670vwr3kl10kfno909q38kh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='grocery_analysis_output' name='excel-direct.1is08360cali0u1dva9oe0ldli69'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/varad/Downloads/Data_analytics/Groceries dataset for Market Basket Analysis/Preprocessed_data/grocery_analysis_output.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1is08360cali0u1dva9oe0ldli69' name='Frequent_Itemsets' table='[Frequent_Itemsets$]' type='table'>
          <columns gridOrigin='A1:B751:no:A1:B751:0' header='yes' outcome='6'>
            <column datatype='real' name='support' ordinal='0' />
            <column datatype='string' name='itemsets' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Frequent_Itemsets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B751:no:A1:B751:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[support]</local-name>
            <parent-name>[Frequent_Itemsets]</parent-name>
            <remote-alias>support</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Frequent!Itemsets_B9CB9F587E534CC0B767FE960A568D72]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>itemsets</remote-name>
            <remote-type>130</remote-type>
            <local-name>[itemsets]</local-name>
            <parent-name>[Frequent_Itemsets]</parent-name>
            <remote-alias>itemsets</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Frequent!Itemsets_B9CB9F587E534CC0B767FE960A568D72]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Itemcount' datatype='integer' name='[Calculation_1310266052544532481]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LEN([Calculation_1310266052545028098]) - LEN(REPLACE([Calculation_1310266052545028098], &quot;,&quot;, &quot;&quot;)) + 1' />
      </column>
      <column caption='Itemset' datatype='string' name='[Calculation_1310266052545028098]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(REPLACE(STR([itemsets]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot; &quot;, &quot;&quot;)' />
      </column>
      <column caption='Frequent_Itemsets' datatype='table' name='[__tableau_internal_object_id__].[Frequent!Itemsets_B9CB9F587E534CC0B767FE960A568D72]' role='measure' type='quantitative' />
      <column caption='Itemsets' datatype='string' name='[itemsets]' role='dimension' type='nominal' />
      <column caption='Support' datatype='real' name='[support]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1310266052545028098]' derivation='None' name='[none:Calculation_1310266052545028098:nk]' pivot='key' type='nominal' />
      <column-instance column='[itemsets]' derivation='None' name='[none:itemsets:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:itemsets:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;beef&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;cake bar&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;domestic eggs&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;cocoa drinks&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;bottled beer&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;female sanitary products&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;fruit/vegetable juice&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;herbs&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;male cosmetics&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;napkins&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;nuts/prunes&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;pasta&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;pudding powder&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;soda&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;salty snack&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;yogurt&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;specialty bar&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;syrup&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenset({&apos;whole milk&apos;, &apos;meat&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;berries&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;butter&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;domestic eggs&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;canned vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;frozen vegetables&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;hamburger meat&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;ketchup&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;mustard&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;onions&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;soft cheese&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;margarine&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;pork&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;cat food&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;root vegetables&apos;, &apos;butter milk&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;long life bakery product&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;snack products&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;specialty chocolate&apos;, &apos;tropical fruit&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;spices&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;salty snack&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;vinegar&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;frozen meals&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;brandy&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;butter&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;chewing gum&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;detergent&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;fruit/vegetable juice&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;hard cheese&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;liquor&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;napkins&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;butter milk&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;pickled vegetables&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;potato products&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;detergent&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;rum&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;soda&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;butter milk&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;soups&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;sugar&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;domestic eggs&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;sugar&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;waffles&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;white wine&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;berries&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;beverages&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;chocolate&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;margarine&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;flour&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;frozen meals&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;grapes&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;hygiene articles&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;meat&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;oil&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;hygiene articles&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;rice&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;hygiene articles&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;UHT-milk&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;salty snack&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;semi-finished bread&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;hygiene articles&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;specialty chocolate&apos;, &apos;citrus fruit&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;berries&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;napkins&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;turkey&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;onions&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;candles&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;salty snack&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;chocolate marshmallow&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;cleaner&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;bottled beer&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;finished products&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;frozen dessert&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;fruit/vegetable juice&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;herbs&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;margarine&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;oil&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;frozen meals&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;ready soups&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;grapes&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;salty snack&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;frozen meals&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;specialty bar&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;tea&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;ham&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;whole milk&apos;, &apos;processed cheese&apos;})&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenset({&apos;zwieback&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;baking powder&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;butter&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;chewing gum&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;dish cleaner&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;fruit/vegetable juice&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;hard cheese&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;liver loaf&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;tropical fruit&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;napkins&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;candy&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;pickled vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;processed cheese&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;sausage&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;salt&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;candy&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;sparkling wine&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;sugar&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;flour&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;UHT-milk&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;waffles&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;white wine&apos;})&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;soft cheese&apos;})&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;frozenset({&apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;UHT-milk&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;butter&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;canned fish&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;bottled beer&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;frozen vegetables&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;ham&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;Instant food products&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;misc. beverages&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;onions&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;soda&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;pork&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;sliced cheese&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;specialty chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;canned beer&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;UHT-milk&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;abrasive cleaner&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;butter&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;cat food&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;hamburger meat&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;kitchen towels&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;napkins&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;organic sausage&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;newspapers&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;root vegetables&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;soap&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;soft cheese&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;spread cheese&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;waffles&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;white bread&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;hamburger meat&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;beverages&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;margarine&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;frozen vegetables&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;ham&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;ice cream&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;misc. beverages&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;onions&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;pot plants&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;pork&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;onions&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;sliced cheese&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;rolls/buns&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;butter milk&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;UHT-milk&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;chewing gum&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;bathroom cleaner&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;hamburger meat&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;butter&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;chicken&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;curd cheese&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;tropical fruit&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;dishes&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;fruit/vegetable juice&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;hard cheese&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;long life bakery product&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;napkins&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;chewing gum&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;packaged fruit/vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;berries&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;processed cheese&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;frozen meals&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;salty snack&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;chewing gum&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;specialty bar&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;sugar&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;waffles&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;whole milk&apos;, &apos;butter milk&apos;})&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;beverages&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;bottled beer&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;chocolate&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;napkins&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;condensed milk&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;citrus fruit&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;flower (seeds)&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;frozen meals&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;grapes&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;hygiene articles&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;canned beer&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;misc. beverages&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;canned beer&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;oil&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;ice cream&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;hamburger meat&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;roll products &apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;ice cream&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;waffles&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;semi-finished bread&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;skin care&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;ice cream&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;specialty chocolate&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;bottled beer&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;newspapers&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;UHT-milk&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;berries&apos;})&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;berries&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;beverages&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;chocolate&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;newspapers&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;cooking chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;dessert&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;flower soil/fertilizer&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;frozen potato products&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;ham&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;hygiene articles&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;misc. beverages&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;domestic eggs&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;oil&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;long life bakery product&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;citrus fruit&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;long life bakery product&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;semi-finished bread&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;sliced cheese&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;long life bakery product&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;specialty chocolate&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;onions&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;UHT-milk&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;butter milk&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;butter milk&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;frozen vegetables&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;ham&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;instant coffee&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;misc. beverages&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;onions&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;pork&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;butter milk&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;other vegetables&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;yogurt&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;frozen meals&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;butter milk&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;sliced cheese&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;specialty chocolate&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;butter&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;canned fruit&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;pip fruit&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;tropical fruit&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;frozen vegetables&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;hamburger meat&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;jam&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;misc. beverages&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;onions&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;hard cheese&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;pork&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;candy&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;packaged fruit/vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;salty snack&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;grapes&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;sliced cheese&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;specialty fat&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;cat food&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;UHT-milk&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;detergent&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;beverages&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;candy&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;chocolate&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;cling film/bags&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;curd&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;fish&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;frozen fish&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;herbs&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;bottled beer&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;mayonnaise&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;bottled beer&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;oil&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;grapes&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;berries&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;tropical fruit&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;red/blush wine&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;ham&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;soft cheese&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;salty snack&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;grapes&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;specialty bar&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;tidbits&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;hamburger meat&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenset({&apos;whole milk&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;frozenset({&apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;beef&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;chicken&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;cream cheese &apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;dog food&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;fruit/vegetable juice&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;hard cheese&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;long life bakery product&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;napkins&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;nut snack&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;pasta&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;bottled beer&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;prosecco&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;seasonal products&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;salty snack&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;specialty bar&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;sweet spreads&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;whole milk&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;butter&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;butter&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;frozen vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;cat food&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;candy&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;dessert&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;fruit/vegetable juice&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;hard cheese&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;light bulbs&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;napkins&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;pet care&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;pot plants&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;chocolate&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;processed cheese&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;root vegetables&apos;, &apos;meat&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;soft cheese&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;sugar&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;waffles&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;white bread&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;long life bakery product&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;beverages&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;chocolate&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;cookware&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;dessert&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;frozen vegetables&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;ham&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;ice cream&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;misc. beverages&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;onions&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;meat&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;pork&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;popcorn&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;berries&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;meat&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;sliced cheese&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;meat&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;specialty chocolate&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;UHT-milk&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;candy&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;berries&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;beverages&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;candy&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;chocolate&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;canned beer&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;dental care&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;brown bread&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;flour&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;frozen fish&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;grapes&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;house keeping products&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;meat spreads&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;bottled water&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;oil&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;hamburger meat&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;pastry&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;canned beer&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;red/blush wine&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;hamburger meat&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;specialty bar&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;salty snack&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;seasonal products&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;yogurt&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;hamburger meat&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;specialty cheese&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;beef&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;long life bakery product&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;UHT-milk&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;whipped/sour cream&apos;, &apos;onions&apos;})&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;artif. sweetener&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;bottled beer&apos;, &apos;frankfurter&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;bottled water&apos;, &apos;chicken&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;brown bread&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;butter&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;canned beer&apos;, &apos;fruit/vegetable juice&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;cereals&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;canned beer&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;citrus fruit&apos;, &apos;tropical fruit&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;cream cheese &apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;curd&apos;, &apos;sausage&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;detergent&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;domestic eggs&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;frankfurter&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;fruit/vegetable juice&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;hard cheese&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;liquor (appetizer)&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;margarine&apos;, &apos;shopping bags&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;napkins&apos;, &apos;rolls/buns&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;newspapers&apos;, &apos;whipped/sour cream&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;berries&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;other vegetables&apos;, &apos;yogurt&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;photo/film&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;pip fruit&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;pot plants&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;coffee&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;rolls/buns&apos;, &apos;red/blush wine&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;sauces&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;sausage&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;shopping bags&apos;, &apos;pastry&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;soda&apos;, &apos;berries&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;softener&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;sugar&apos;, &apos;other vegetables&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;cream cheese &apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;tropical fruit&apos;, &apos;soda&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;waffles&apos;, &apos;whole milk&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;white bread&apos;})&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenset({&apos;yogurt&apos;, &apos;root vegetables&apos;})&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1310266052545028098:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;beverages&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;brownbread,cannedbeer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;buttermilk,rolls/buns&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;cannedbeer,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;chicken,othervegetables&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;chocolatemarshmallow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;cleaner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;curdcheese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;femalesanitaryproducts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frankfurter,rolls/buns&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;frozenvegetables,rootvegetables&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;grapes,sausage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;icecream,othervegetables&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;margarine,cannedbeer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;napkins,wholemilk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;newspapers,yogurt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;othervegetables,candy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;othervegetables,napkins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;othervegetables,tropicalfruit&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pipfruit,berries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pork&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;rolls/buns,specialtychocolate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;rootvegetables,saltysnack&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sausage,saltysnack&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;shoppingbags,sausage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;soda,chocolate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;soda,oil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;soda,wholemilk,othervegetables&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;spreadcheese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;tropicalfruit,domesticeggs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UHT-milk,rolls/buns&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;whitebread,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;wholemilk,frankfurter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;wholemilk,pork&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;wholemilk,yogurt,sausage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;yogurt,fruit/vegetablejuice&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;yogurt,whitebread&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;abrasivecleaner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bottledwater&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;brownbread,tropicalfruit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;cannedbeer,beef&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;chicken&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;chocolate,bottledbeer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;citrusfruit,pork&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;coffee,sausage&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;dessert,yogurt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frankfurter,butter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frozenvegetables,beef&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;fruit/vegetablejuice,margarine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hardcheese,wholemilk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;liverloaf&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;misc.beverages,sausage&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;newspapers,pipfruit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;newspapers,wholemilk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;othervegetables,beef&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;othervegetables,grapes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;othervegetables,saltysnack&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;othervegetables,soda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pastry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pipfruit,pork&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;prosecco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;rolls/buns,hamburgermeat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;rootvegetables,domesticeggs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;sausage,butter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;shoppingbags,creamcheese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;soda,bottledbeer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;soda,ham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;soda,specialtybar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;specialtybar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;tropicalfruit,bottledwater&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;tropicalfruit,shoppingbags&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;whipped/sourcream,bottledbeer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;wholemilk,catfood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;wholemilk,meat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;wholemilk,sugar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;yogurt,coffee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;yogurt,rolls/buns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;beef&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;brownbread,beef&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;butter,beef&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cannedbeer,curd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;chicken,citrusfruit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;chocolate,rolls/buns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;citrusfruit,shoppingbags&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cookware&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;dishes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frankfurter,curd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;frozenvegetables,citrusfruit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fruit/vegetablejuice,rootvegetables&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hygienearticles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;margarine,beef&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;napkins,pastry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;newspapers,shoppingbags&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;othervegetables,bottledwater&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;othervegetables,longlifebakeryproduct&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petcare&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pipfruit,rolls/buns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pipfruit,shoppingbags&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;red/blushwine,rolls/buns&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rolls/buns,pastry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rolls/buns,soda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rootvegetables&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rootvegetables,meat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;sausage,domesticeggs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;shoppingbags,pastry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;soda,buttermilk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;soda,margarine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;soda,UHT-milk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;specialtycheese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;tropicalfruit,citrusfruit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;tropicalfruit,whitebread&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;whipped/sourcream,pastry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;wholemilk,creamcheese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;wholemilk,pasta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;wholemilk,whitebread&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;yogurt,domesticeggs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;yogurt,shoppingbags&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;rolls/buns&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;rolls/buns,othervegetables&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bottledbeer,curd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;brownbread,frankfurter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;buttermilk,wholemilk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cannedvegetables&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;chicken,rootvegetables&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;citrusfruit,bottledwater&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;coffee,bottledwater&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;dessert,curd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;flour,tropicalfruit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;frankfurter,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;fruit/vegetablejuice,beef&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;hamburgermeat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;instantcoffee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;margarine,sausage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;newspapers,bottledbeer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;oil,rolls/buns&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;othervegetables,coffee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;othervegetables,pastry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;othervegetables,whitebread&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pipfruit,cannedbeer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pork,curd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;rolls/buns,bottledwater&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;rootvegetables,beef&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;rum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;seasonalproducts,rolls/buns&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;slicedcheese,rootvegetables&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;soda,pipfruit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;softcheese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sweetspreads&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;tropicalfruit,margarine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;waffles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;wholemilk,berries&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;wholemilk,fruit/vegetablejuice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;wholemilk,rolls/buns,sausage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;yogurt,bottledbeer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;yogurt,longlifebakeryproduct&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;beverages,bottledwater&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;brownbread,citrusfruit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;buttermilk,rootvegetables&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;cannedbeer,whitebread&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;chicken,pastry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;citrusfruit,rolls/buns&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;clingfilm/bags&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dentalcare&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;finishedproducts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frankfurter,rootvegetables&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;frozenvegetables,sausage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;icecream,rolls/buns&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;margarine,curd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;napkins,yogurt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;nuts/prunes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;othervegetables,cannedbeer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;othervegetables,newspapers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;othervegetables,UHT-milk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pipfruit,bottledbeer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pork,bottledbeer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;rolls/buns,berries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;rootvegetables,sausage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sausage,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;shoppingbags,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;soda,citrusfruit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;soda,onions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;soda,wholemilk,rolls/buns&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sugar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tropicalfruit,frankfurter&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UHT-milk,rootvegetables&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;whitewine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;wholemilk,frozenfish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;wholemilk,potplants&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;yogurt,citrusfruit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;yogurt,ham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;zwieback&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;berries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;brownbread,bottledbeer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;butter,bottledbeer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cannedbeer,domesticeggs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;chicken,curd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;chocolate,rootvegetables&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;citrusfruit,specialtychocolate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;creamcheese&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;dogfood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frankfurter,domesticeggs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;frozenvegetables,frankfurter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;fruit/vegetablejuice,sausage&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hygienearticles,rolls/buns&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;margarine,bottledbeer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;napkins,rolls/buns&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;newspapers,tropicalfruit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;othervegetables,brownbread&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;othervegetables,margarine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;othervegetables,specialtybar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;pipfruit,tropicalfruit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;rice&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;rolls/buns,pork&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;rootvegetables,pastry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;sausage,longlifebakeryproduct&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;shoppingbags,pork&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;soda,candy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;soda,meat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;soda,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;specialtychocolate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tropicalfruit,coffee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;whitebread&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;wholemilk,curd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;wholemilk,pastry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;wholemilk,whitewine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;yogurt,frankfurter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;yogurt,tropicalfruit&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;tropicalfruit,rolls/buns&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;tropicalfruit,wholemilk&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;wholemilk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;bottledwater,butter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;brownbread,sausage&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;candy,rolls/buns&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;chewinggum,wholemilk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;chicken,yogurt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;citrusfruit,margarine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;coffee,rolls/buns&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;dessert,tropicalfruit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frankfurter,bottledbeer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;frozenpotatoproducts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fruit/vegetablejuice,domesticeggs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;hardcheese,rolls/buns&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;liquor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;misc.beverages,rolls/buns&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;newspapers,frankfurter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;organicsausage&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;othervegetables,frozenvegetables&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;othervegetables,rolls/buns,soda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;packagedfruit/vegetables,rolls/buns&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pipfruit,margarine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;processedcheese,rolls/buns&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;rolls/buns,domesticeggs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;rootvegetables,creamcheese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sausage,bottledbeer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;shoppingbags,butter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;soda,berries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;soda,fruit/vegetablejuice&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;soda,shoppingbags&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;soups&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;tropicalfruit,berries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;tropicalfruit,saltysnack&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;whipped/sourcream&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;wholemilk,candy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;wholemilk,longlifebakeryproduct&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;yogurt,chocolate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;yogurt,pipfruit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;artif.sweetener&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;bottledwater,pastry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;brownbread,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;cannedbeer,bottledbeer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;chicken,bottledbeer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;chocolate,bottledwater&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;coffee,shoppingbags&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;detergent&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frankfurter,cannedbeer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;frozenvegetables,bottledbeer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;fruit/vegetablejuice,pastry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;hardcheese,yogurt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;longlifebakeryproduct&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;mustard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;newspapers,rolls/buns&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;othervegetables,berries&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;othervegetables,ham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;othervegetables,sausage&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pastry,beef&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;popcorn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;puddingpowder&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;rolls/buns,longlifebakeryproduct&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;rootvegetables,grapes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sausage,cannedbeer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;shoppingbags,curd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;soda,bottledwater&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;soda,hamburgermeat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;soda,specialtychocolate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;specialtybar,rolls/buns&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tropicalfruit,butter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tropicalfruit,specialtychocolate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;whipped/sourcream,bottledwater&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wholemilk,chocolate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wholemilk,misc.beverages&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wholemilk,tropicalfruit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;yogurt,creamcheese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;yogurt,rootvegetables&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bottledwater,beef&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;brownbread,rolls/buns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;candy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;chewinggum,othervegetables&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;chicken,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;citrusfruit,curd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;coffee,frankfurter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dessert,sausage&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frankfurter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;frozenmeals,rolls/buns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;fruit/vegetablejuice,cannedbeer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hardcheese,othervegetables&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;kitchentowels&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;meatspreads&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;newspapers,citrusfruit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;onions,rootvegetables&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;othervegetables,frankfurter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;othervegetables,red/blushwine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pickledvegetables&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pipfruit,curd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;potplants&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;rolls/buns,creamcheese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;rootvegetables,butter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;sausage,wholemilk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;seasonalproducts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;shoppingbags,bottledbeer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;soda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;soda,curd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;soda,frozenmeals&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;soda,rootvegetables&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;soda,saltysnack&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;softcheese,yogurt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;tropicalfruit,pork&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;waffles,wholemilk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;wholemilk,brownbread&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;wholemilk,herbs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;wholemilk,semi-finishedbread&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;yogurt,candy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;yogurt,onions&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;berries,bottledwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;brownbread,bottledwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;butter,pastry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;cannedbeer,pastry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;chicken,domesticeggs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;chocolate,sausage&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;citrusfruit,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;curd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;domesticeggs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frankfurter,margarine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;frozenvegetables,pipfruit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;fruit/vegetablejuice,tropicalfruit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hygienearticles,rootvegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;margarine,bottledwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;napkins,rootvegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;newspapers,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;othervegetables,butter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;othervegetables,meat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;othervegetables,specialtychocolate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pipfruit,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rollproducts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rolls/buns,saltysnack&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rootvegetables,pork&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;sausage,pastry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;shoppingbags,rolls/buns&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;soda,cannedbeer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;soda,napkins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;soda,whitebread&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;specialtyfat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;tropicalfruit,creamcheese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UHT-milk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;whitebread,bottledwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;wholemilk,detergent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;wholemilk,pickledvegetables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;wholemilk,yogurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;yogurt,frozenmeals&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;yogurt,UHT-milk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;bottledbeer,domesticeggs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;brownbread,pastry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;buttermilk,yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;catfood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;chicken,sausage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;citrusfruit,butter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;coffee,cannedbeer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;dessert,othervegetables&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;flour,wholemilk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;frozendessert&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fruit/vegetablejuice,bottledbeer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hamburgermeat,bottledbeer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Instantfoodproducts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;margarine,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;newspapers,bottledwater&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;onions&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;othervegetables,creamcheese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;othervegetables,pipfruit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;photo/film&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pipfruit,chocolate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pork,domesticeggs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;rolls/buns,butter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;rootvegetables,berries&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;salt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;semi-finishedbread&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;slicedcheese,sausage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;soda,dessert&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;soda,pork&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;syrup&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;tropicalfruit,onions&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;waffles,rolls/buns&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wholemilk,beverages&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wholemilk,grapes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wholemilk,rootvegetables&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wholemilk,slicedcheese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;yogurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;yogurt,bottledwater&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;yogurt,margarine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;yogurt,wholemilk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bottledbeer,pastry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;brownbread,pipfruit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cakebar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;cereals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;chicken,shoppingbags&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;citrusfruit,cannedbeer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;coffee,citrusfruit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;dessert,rolls/buns&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;flower(seeds)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;frozenfish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fruit/vegetablejuice,bottledwater&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;hamburgermeat,pastry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;jam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;mayonnaise&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;newspapers,butter&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;onions,bottledwater&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;othervegetables,curd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;othervegetables,pork&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;othervegetables,wholemilk,rolls/buns&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pipfruit,citrusfruit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pork,pastry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;rolls/buns,cannedbeer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;rootvegetables,bottledbeer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;saltysnack&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;shoppingbags&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;snackproducts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;soda,domesticeggs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;soda,rolls/buns&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;tea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;tropicalfruit,pastry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;waffles,rootvegetables&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wholemilk,bottledbeer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wholemilk,ham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wholemilk,saltysnack&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;yogurt,brownbread&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;yogurt,misc.beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;bottledwater,bottledbeer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;brownbread,rootvegetables&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;candy,citrusfruit&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;chewinggum,soda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;chicken,wholemilk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;citrusfruit,domesticeggs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;coffee,pastry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;dessert,shoppingbags&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frankfurter,beef&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;frozenmeals,sausage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;fruit/vegetablejuice,citrusfruit&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;hardcheese,pipfruit&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;lightbulbs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;misc.beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;newspapers,domesticeggs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;onions,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;othervegetables,frozenmeals&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;othervegetables,rolls/buns&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;packagedfruit/vegetables&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pipfruit,frankfurter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;processedcheese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;rolls/buns,curd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;rootvegetables,cannedbeer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sausage,beverages&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;shoppingbags,bottledwater&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;soda,beef&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;soda,frozenvegetables&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;soda,sausage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;softener&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;tropicalfruit,beef&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;tropicalfruit,rootvegetables&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;waffles,yogurt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;wholemilk,hygienearticles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;wholemilk,shoppingbags&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;yogurt,cannedbeer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;yogurt,pastry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;bottledwater,curd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;brownbread,shoppingbags&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;cannedbeer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;chewinggum,yogurt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;chocolate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;citrusfruit,pastry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;coffee,rootvegetables&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;dessert,wholemilk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frankfurter,bottledwater&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frozenvegetables&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fruit/vegetablejuice,frankfurter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;hardcheese,rootvegetables&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;liquor(appetizer)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;misc.beverages,rootvegetables&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;newspapers,pastry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;othervegetables,bottledbeer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;othervegetables,fruit/vegetablejuice&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;othervegetables,slicedcheese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pasta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pipfruit,pastry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;processedcheese,rootvegetables&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;rolls/buns,grapes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;rootvegetables,curd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sausage,bottledwater&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;shoppingbags,cannedbeer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;soda,beverages&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;soda,grapes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;soda,slicedcheese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sparklingwine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tropicalfruit,bottledbeer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tropicalfruit,sausage&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;whipped/sourcream,beef&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;wholemilk,cannedbeer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;wholemilk,margarine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;wholemilk,specialtychocolate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;yogurt,pork&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;bottledbeer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;brownbread,curd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;buttermilk,shoppingbags&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cannedfish&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;chicken,pipfruit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;citrusfruit,beef&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cocoadrinks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dessert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;fish&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frankfurter,sausage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;frozenvegetables,tropicalfruit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ham,rolls/buns&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;icecream,soda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;margarine,pastry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;newspapers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;nutsnack&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;othervegetables&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;othervegetables,chocolate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;othervegetables,oil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;othervegetables,waffles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;othervegetables,yogurt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pipfruit,bottledwater&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pork,bottledwater&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;rolls/buns,beverages&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;rolls/buns,whitebread&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;sausage,whitebread&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;skincare&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;soda,coffee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;soda,othervegetables&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;soda,wholemilk,sausage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;sugar,bottledwater&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tropicalfruit,hamburgermeat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UHT-milk,sausage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;wholemilk,butter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;wholemilk,frozenmeals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;wholemilk,processedcheese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;yogurt,beef&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;yogurt,hamburgermeat&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;rolls/buns,sausage&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;rolls/buns,wholemilk&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;sausage&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;berries,pastry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;brownbread,butter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;buttermilk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;cannedbeer,saltysnack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;chicken,margarine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;chocolate,tropicalfruit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;citrusfruit,whitebread&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;curd,beef&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;domesticeggs,beef&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frankfurter,pastry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;frozenvegetables,rolls/buns&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;grapes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;icecream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;margarine,butter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;napkins,tropicalfruit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;othervegetables,beverages&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;othervegetables,buttermilk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;othervegetables,misc.beverages&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;othervegetables,sugar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;pipfruit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;rolls/buns,beef&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;rolls/buns,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;rootvegetables,rolls/buns&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;sausage,pork&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;shoppingbags,rootvegetables&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;soda,chicken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;soda,newspapers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;softcheese,rolls/buns&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;spices&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tropicalfruit,curd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UHT-milk,bottledwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;whitebread,domesticeggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;wholemilk,domesticeggs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;wholemilk,pipfruit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;wholemilk,yogurt,rolls/buns&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;yogurt,frozenvegetables&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;yogurt,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bakingpowder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;brandy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;brownbread,whitebread&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cannedbeer,bottledwater&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;chicken,bottledwater&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;chocolate,cannedbeer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;citrusfruit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;citrusfruit,rootvegetables&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;condensedmilk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;detergent,rolls/buns&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frankfurter,citrusfruit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;frozenvegetables,bottledwater&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fruit/vegetablejuice,pipfruit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;herbs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;malecosmetics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;napkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;newspapers,rootvegetables&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;othervegetables,hamburgermeat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;othervegetables,rootvegetables&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;othervegetables,semi-finishedbread&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;othervegetables,wholemilk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pastry,curd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pipfruit,rootvegetables&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;readysoups&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;rolls/buns,margarine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;rootvegetables,hamburgermeat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sausage,creamcheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;shoppingbags,domesticeggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;soda,brownbread&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;soda,hygienearticles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;soda,sugar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;specialtybar,wholemilk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tropicalfruit,cannedbeer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tropicalfruit,UHT-milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;whipped/sourcream,butter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;wholemilk,citrusfruit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;wholemilk,oil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;wholemilk,UHT-milk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;yogurt,curd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;yogurt,saltysnack&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bottledwater,domesticeggs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;brownbread,pork&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;candles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;chewinggum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;chicken,tropicalfruit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;citrusfruit,creamcheese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;coffee,domesticeggs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;dessert,rootvegetables&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;flowersoil/fertilizer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;frozenmeals&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fruit/vegetablejuice,butter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hardcheese&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ketchup&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;meat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;newspapers,cannedbeer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;onions,rolls/buns&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;othervegetables,domesticeggs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;othervegetables,potplants&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;othervegetables,wholemilk,yogurt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;pipfruit,coffee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;potatoproducts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rolls/buns,catfood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rootvegetables,bottledwater&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sauces&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;shoppingbags,beef&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;soap&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;soda,frankfurter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;softcheese,othervegetables&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;softcheese,wholemilk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;tidbits&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;waffles,tropicalfruit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;wholemilk,bottledwater&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;wholemilk,hamburgermeat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;wholemilk,sausage&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;yogurt,butter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;yogurt,oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;bottledbeer,beef&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;brownbread,domesticeggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;buttermilk,tropicalfruit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cannedfruit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;chicken,rolls/buns&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;citrusfruit,bottledbeer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;coffee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;dessert,bottledwater&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;flour&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;frankfurter,shoppingbags&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fruit/vegetablejuice&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ham,tropicalfruit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;icecream,wholemilk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;margarine,pork&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;newspapers,beef&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;othervegetables,citrusfruit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;othervegetables,onions&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;othervegetables,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pipfruit,butter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pork,cannedbeer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rolls/buns,bottledbeer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rootvegetables,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rootvegetables,whitebread&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;slicedcheese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;soda,creamcheese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;soda,pastry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;soda,yogurt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;sugar,tropicalfruit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;tropicalfruit,longlifebakeryproduct&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;vinegar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;wholemilk,beef&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;wholemilk,frozenvegetables&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;wholemilk,rolls/buns&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;yogurt,berries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;yogurt,herbs&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;soda,wholemilk&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;tropicalfruit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;bathroomcleaner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;brownbread&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cannedbeer,butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;chicken,cannedbeer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;chocolate,citrusfruit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;citrusfruit,sausage&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cookingchocolate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;dishcleaner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frankfurter,creamcheese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;frozenvegetables,cannedbeer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fruit/vegetablejuice,rolls/buns&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;housekeepingproducts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;margarine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;napkins,citrusfruit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;newspapers,sausage&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;othervegetables,hygienearticles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;othervegetables,shoppingbags&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pastry,domesticeggs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pipfruit,sausage&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;red/blushwine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rolls/buns,meat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rootvegetables,margarine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;sausage,curd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;shoppingbags,margarine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;soda,butter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;soda,longlifebakeryproduct&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;soda,tropicalfruit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;specialtybar,yogurt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tropicalfruit,catfood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tropicalfruit,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;whipped/sourcream,curd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;wholemilk,coffee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;wholemilk,onions&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;wholemilk,whipped/sourcream&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;yogurt,detergent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;yogurt,sausage&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Frequent_Itemsets' id='Frequent!Itemsets_B9CB9F587E534CC0B767FE960A568D72'>
            <properties context=''>
              <relation connection='excel-direct.1is08360cali0u1dva9oe0ldli69' name='Frequent_Itemsets' table='[Frequent_Itemsets$]' type='table'>
                <columns gridOrigin='A1:B751:no:A1:B751:0' header='yes' outcome='6'>
                  <column datatype='real' name='support' ordinal='0' />
                  <column datatype='string' name='itemsets' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Top 10 Frequent Single items by Support</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grocery_analysis_output' name='federated.0xpxc670vwr3kl10kfno909q38kh' />
          </datasources>
          <datasource-dependencies datasource='federated.0xpxc670vwr3kl10kfno909q38kh'>
            <column caption='Itemset' datatype='string' name='[Calculation_1310266052545028098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(REPLACE(STR([itemsets]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot; &quot;, &quot;&quot;)' />
            </column>
            <column caption='Itemsets' datatype='string' name='[itemsets]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1310266052545028098]' derivation='None' name='[none:Calculation_1310266052545028098:nk]' pivot='key' type='nominal' />
            <column-instance column='[support]' derivation='Sum' name='[sum:support:qk]' pivot='key' type='quantitative' />
            <column caption='Support' datatype='real' name='[support]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([support])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_1310266052545028098:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;wholemilk&quot;</bucket>
              <bucket>&quot;othervegetables&quot;</bucket>
              <bucket>&quot;rolls/buns&quot;</bucket>
              <bucket>&quot;soda&quot;</bucket>
              <bucket>&quot;yogurt&quot;</bucket>
              <bucket>&quot;rootvegetables&quot;</bucket>
              <bucket>&quot;tropicalfruit&quot;</bucket>
              <bucket>&quot;bottledwater&quot;</bucket>
              <bucket>&quot;sausage&quot;</bucket>
              <bucket>&quot;citrusfruit&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0xpxc670vwr3kl10kfno909q38kh].[sum:support:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]' />
              <text column='[federated.0xpxc670vwr3kl10kfno909q38kh].[sum:support:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]</rows>
        <cols>[federated.0xpxc670vwr3kl10kfno909q38kh].[sum:support:qk]</cols>
      </table>
      <simple-id uuid='{8C790915-5FE2-4E1F-99A7-D0E811E8B3D6}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Association Rules Ranked by Confidence</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Association_Rules (grocery_analysis_output)' name='federated.0pqp8wr14k03y81bjq73c1s31zhv' />
          </datasources>
          <datasource-dependencies datasource='federated.0pqp8wr14k03y81bjq73c1s31zhv'>
            <column caption='Rule' datatype='string' name='[Calculation_1310266052546838531]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(REPLACE(STR([antecedents]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot;}&quot;, &quot;&quot;) + &#13;&#10;&quot; → &quot; + &#13;&#10;REPLACE(REPLACE(REPLACE(REPLACE(STR([consequents]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot;}&quot;, &quot;&quot;)' />
            </column>
            <column caption='Antecedent' datatype='string' name='[Calculation_1499417236592562176]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(STR([antecedents]), &quot;frozenset({&apos;&quot;, &quot;&quot;), &quot;&apos;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;)' />
            </column>
            <column aggregation='CountD' caption='Antecedent Support' datatype='real' name='[antecedent support]' role='measure' type='quantitative' />
            <column caption='Antecedents' datatype='string' name='[antecedents]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Confidence' datatype='real' name='[confidence]' role='measure' type='quantitative' />
            <column caption='Consequents' datatype='string' name='[consequents]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1310266052546838531]' derivation='None' name='[none:Calculation_1310266052546838531:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1499417236592562176]' derivation='None' name='[none:Calculation_1499417236592562176:nk]' pivot='key' type='nominal' />
            <column-instance column='[confidence]' derivation='None' name='[none:confidence:ok]' pivot='key' type='ordinal' />
            <column-instance column='[confidence]' derivation='Sum' name='[sum:confidence:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:confidence:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([antecedent support])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:confidence:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:confidence:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:confidence:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:confidence:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1499417236592562176:nk]' />
              <text column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:confidence:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]</rows>
        <cols>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:confidence:qk]</cols>
      </table>
      <simple-id uuid='{B4B3CDE0-4834-4645-907A-CA8A91E73400}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Top 10 Frequent itemsets (Size&gt;1) Ranked by Support</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='grocery_analysis_output' name='federated.0xpxc670vwr3kl10kfno909q38kh' />
          </datasources>
          <datasource-dependencies datasource='federated.0xpxc670vwr3kl10kfno909q38kh'>
            <column caption='Itemcount' datatype='integer' name='[Calculation_1310266052544532481]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LEN([Calculation_1310266052545028098]) - LEN(REPLACE([Calculation_1310266052545028098], &quot;,&quot;, &quot;&quot;)) + 1' />
            </column>
            <column caption='Itemset' datatype='string' name='[Calculation_1310266052545028098]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(REPLACE(STR([itemsets]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot; &quot;, &quot;&quot;)' />
            </column>
            <column caption='Itemsets' datatype='string' name='[itemsets]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1310266052545028098]' derivation='None' name='[none:Calculation_1310266052545028098:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1310266052544532481]' derivation='Sum' name='[sum:Calculation_1310266052544532481:qk]' pivot='key' type='quantitative' />
            <column-instance column='[support]' derivation='Sum' name='[sum:support:qk]' pivot='key' type='quantitative' />
            <column caption='Support' datatype='real' name='[support]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([support])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;beef,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;beef,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;berries,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;berries,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;beverages,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;beverages,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;beverages,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;beverages,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;beverages,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;beverages,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,chocolate&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,frozenvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,hamburgermeat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledbeer,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,berries&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,chocolate&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,frozenvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,onions&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,UHT-milk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;bottledwater,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;brownbread,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;butter,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;butter,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;butter,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;butter,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;butter,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;butter,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;butter,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;butter,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;butter,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;candy,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,bottledbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,chocolate&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,domesticeggs&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,frozenvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,saltysnack&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;cannedbeer,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;catfood,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;chewinggum,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;chicken,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;chicken,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;chocolate,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;chocolate,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;chocolate,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;chocolate,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;chocolate,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;chocolate,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,bottledbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,candy&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,cannedbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,chocolate&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,creamcheese&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,domesticeggs&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,frozenvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,margarine&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,napkins&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,newspapers&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,tropicalfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;citrusfruit,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;creamcheese,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;creamcheese,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;creamcheese,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;creamcheese,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;creamcheese,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;creamcheese,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;creamcheese,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;creamcheese,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;creamcheese,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,bottledbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,cannedbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,citrusfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,dessert&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,margarine&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,pipfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,tropicalfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;curd,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,tropicalfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;dessert,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;detergent,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,bottledbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;domesticeggs,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;flour,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,frozenvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frankfurter,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frozenfish,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frozenmeals,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frozenvegetables,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frozenvegetables,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frozenvegetables,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frozenvegetables,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frozenvegetables,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;frozenvegetables,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;fruit/vegetablejuice,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;fruit/vegetablejuice,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;fruit/vegetablejuice,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;fruit/vegetablejuice,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;fruit/vegetablejuice,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;fruit/vegetablejuice,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;fruit/vegetablejuice,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;fruit/vegetablejuice,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;grapes,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;grapes,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;ham,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;ham,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;ham,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;ham,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;hamburgermeat,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;hamburgermeat,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;hardcheese,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;hardcheese,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;hardcheese,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;hardcheese,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;hardcheese,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;herbs,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;herbs,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;hygienearticles,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;hygienearticles,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;icecream,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;longlifebakeryproduct,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,bottledbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,cannedbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,tropicalfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;margarine,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;misc.beverages,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;misc.beverages,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;misc.beverages,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;misc.beverages,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;misc.beverages,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;misc.beverages,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;napkins,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;napkins,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;napkins,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;napkins,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;napkins,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;napkins,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;napkins,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,bottledbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,cannedbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,domesticeggs&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;newspapers,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;oil,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;oil,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;oil,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;oil,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;oil,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;onions,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;onions,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;onions,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;onions,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;onions,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,berries&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,buttermilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,candy&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,chewinggum&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,frozenmeals&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,grapes&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,hamburgermeat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,hygienearticles&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,icecream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,longlifebakeryproduct&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,meat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,potplants&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,soda,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,softcheese&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;othervegetables,yogurt,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pasta,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,berries&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,hamburgermeat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pastry,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pickledvegetables,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,berries&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,bottledbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,cannedbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,chocolate&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,citrusfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,frozenvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,hardcheese&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,margarine&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,newspapers&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,tropicalfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pipfruit,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pork,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pork,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pork,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pork,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;pork,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;potplants,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;processedcheese,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;red/blushwine,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,berries&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,buttermilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,candy&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,catfood&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,chocolate&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,detergent&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,frozenmeals&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,frozenvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,grapes&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,ham&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,hamburgermeat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,hygienearticles&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,icecream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,longlifebakeryproduct&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,meat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,onions&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,othervegetables,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,packagedfruit/vegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,processedcheese&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,red/blushwine&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,sausage,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,seasonalproducts&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,soda,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,softcheese&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,specialtybar&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,UHT-milk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,waffles&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rolls/buns,yogurt,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rootvegetables,buttermilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rootvegetables,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;rootvegetables,meat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;saltysnack,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;saltysnack,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;saltysnack,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;saltysnack,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;saltysnack,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;saltysnack,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;saltysnack,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,frozenmeals&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,frozenvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,grapes&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,longlifebakeryproduct&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,soda,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sausage,yogurt,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;semi-finishedbread,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;semi-finishedbread,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,buttermilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;shoppingbags,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;slicedcheese,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;slicedcheese,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;slicedcheese,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;slicedcheese,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;slicedcheese,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,berries&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,buttermilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,candy&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,chewinggum&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,frozenmeals&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,grapes&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,hamburgermeat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,hygienearticles&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,icecream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,longlifebakeryproduct&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,meat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,rolls/buns,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;soda,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;softcheese,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtybar,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtybar,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtybar,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtybar,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtychocolate,citrusfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtychocolate,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtychocolate,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtychocolate,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtychocolate,tropicalfruit&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;specialtychocolate,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sugar,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sugar,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sugar,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;sugar,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,berries&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,bottledbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,bottledwater&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,buttermilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,cannedbeer&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,catfood&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,chocolate&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,creamcheese&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,domesticeggs&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,flour&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,frozenvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,fruit/vegetablejuice&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,ham&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,hamburgermeat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,longlifebakeryproduct&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,napkins&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,newspapers&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,onions&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,pork&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,rolls/buns&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,saltysnack&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,shoppingbags&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,sugar&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,UHT-milk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,waffles&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,whipped/sourcream&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;tropicalfruit,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;UHT-milk,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;UHT-milk,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;UHT-milk,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;UHT-milk,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;UHT-milk,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;UHT-milk,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;waffles,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;waffles,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;waffles,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;waffles,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,brownbread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,butter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,frankfurter&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,onions&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,othervegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,pastry&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,sausage&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whipped/sourcream,yogurt&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whitebread,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whitebread,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;whitewine,wholemilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;wholemilk,buttermilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;wholemilk,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;wholemilk,meat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;wholemilk,processedcheese&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;wholemilk,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,beef&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,berries&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,buttermilk&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,candy&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,chewinggum&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,chicken&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,coffee&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,detergent&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,frozenmeals&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,hamburgermeat&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,longlifebakeryproduct&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,rootvegetables&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,soda&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,softcheese&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,whitebread&quot;' />
                  <groupfilter function='member' level='[none:Calculation_1310266052545028098:nk]' member='&quot;yogurt,wholemilk&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0xpxc670vwr3kl10kfno909q38kh].[sum:Calculation_1310266052544532481:qk]' included-values='in-range'>
            <min>2</min>
            <max>3</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xpxc670vwr3kl10kfno909q38kh].[sum:support:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xpxc670vwr3kl10kfno909q38kh].[sum:Calculation_1310266052544532481:qk]</column>
            <column>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0xpxc670vwr3kl10kfno909q38kh].[sum:support:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]' />
              <text column='[federated.0xpxc670vwr3kl10kfno909q38kh].[sum:support:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]</rows>
        <cols>[federated.0xpxc670vwr3kl10kfno909q38kh].[sum:support:qk]</cols>
      </table>
      <simple-id uuid='{09F19AEF-347A-496A-A202-D6F96C5E5611}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Top 10 Strongest Rules by Lift</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Association_Rules (grocery_analysis_output)' name='federated.0pqp8wr14k03y81bjq73c1s31zhv' />
          </datasources>
          <datasource-dependencies datasource='federated.0pqp8wr14k03y81bjq73c1s31zhv'>
            <column caption='Rule' datatype='string' name='[Calculation_1310266052546838531]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(REPLACE(STR([antecedents]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot;}&quot;, &quot;&quot;) + &#13;&#10;&quot; → &quot; + &#13;&#10;REPLACE(REPLACE(REPLACE(REPLACE(STR([consequents]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot;}&quot;, &quot;&quot;)' />
            </column>
            <column caption='Antecedents' datatype='string' name='[antecedents]' role='dimension' type='nominal' />
            <column caption='Consequents' datatype='string' name='[consequents]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Lift' datatype='real' name='[lift]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1310266052546838531]' derivation='None' name='[none:Calculation_1310266052546838531:nk]' pivot='key' type='nominal' />
            <column-instance column='[lift]' derivation='Sum' name='[sum:lift:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([lift])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_1310266052546838531:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]' />
              <text column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]</rows>
        <cols>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]</cols>
      </table>
      <simple-id uuid='{A9C9F9E2-C1BD-4DA5-A2BD-9E19197B9042}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Confidence vs Lift: Comparative Rule Strength</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Association_Rules (grocery_analysis_output)' name='federated.0pqp8wr14k03y81bjq73c1s31zhv' />
          </datasources>
          <datasource-dependencies datasource='federated.0pqp8wr14k03y81bjq73c1s31zhv'>
            <column caption='Rule' datatype='string' name='[Calculation_1310266052546838531]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='REPLACE(REPLACE(REPLACE(REPLACE(STR([antecedents]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot;}&quot;, &quot;&quot;) + &#13;&#10;&quot; → &quot; + &#13;&#10;REPLACE(REPLACE(REPLACE(REPLACE(STR([consequents]), &quot;frozenset({&quot;, &quot;&quot;), &quot;})&quot;, &quot;&quot;), &quot;&apos;&quot;, &quot;&quot;), &quot;}&quot;, &quot;&quot;)' />
            </column>
            <column caption='Antecedents' datatype='string' name='[antecedents]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Confidence' datatype='real' name='[confidence]' role='measure' type='quantitative' />
            <column caption='Consequents' datatype='string' name='[consequents]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Lift' datatype='real' name='[lift]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1310266052546838531]' derivation='None' name='[none:Calculation_1310266052546838531:nk]' pivot='key' type='nominal' />
            <column-instance column='[confidence]' derivation='Sum' name='[sum:confidence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lift]' derivation='Sum' name='[sum:lift:qk]' pivot='key' type='quantitative' />
            <column-instance column='[support]' derivation='Sum' name='[sum:support:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Support' datatype='real' name='[support]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>1.617140850017563</max>
          </filter>
          <slices>
            <column>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]' />
              <size column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:support:qk]' />
              <text column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:confidence:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:confidence:qk]' z-order='1' />
            <reference-line axis-column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]</rows>
        <cols>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:confidence:qk]</cols>
      </table>
      <simple-id uuid='{2D37836F-8362-4527-993E-95FACBD0261F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759'>Market Basket Analysis Dashboard using Association Rule Mining</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='850' maxwidth='1650' minheight='850' minwidth='1650' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98118' id='18' param='vert' type-v2='layout-flow' w='99030' x='485' y='941'>
            <zone fixed-size='34' h='4941' id='19' is-fixed='true' type-v2='title' w='99030' x='485' y='941'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93177' id='7' param='horz' type-v2='layout-flow' w='99030' x='485' y='5882'>
              <zone h='93177' id='5' type-v2='layout-basic' w='89333' x='485' y='5882'>
                <zone h='31055' id='3' name='Sheet 1' w='44659' x='485' y='5882'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='31055' id='9' name='Sheet 3' w='44674' x='45144' y='5882'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33883' id='10' name='Sheet 2' w='44659' x='485' y='65176'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33883' id='12' name='Sheet 5' w='44674' x='45144' y='65176'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='28239' id='15' name='Sheet 4' w='89333' x='485' y='36937'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='93177' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9697' x='89818' y='5882'>
                <zone h='22902' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]' type-v2='color' w='9697' x='89818' y='5882'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22902' id='11' name='Sheet 2' pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1499417236592562176:nk]' type-v2='color' w='9697' x='89818' y='28784'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='15882' id='13' name='Sheet 5' pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:support:qk]' type-v2='size' w='9697' x='89818' y='51686'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8588' id='14' name='Sheet 5' pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]' type-v2='color' w='9697' x='89818' y='67568'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='22903' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]' type-v2='color' w='9697' x='89818' y='76156'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#e15759'>Market Basket Analysis Dashboard using Association Rule Mining</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98118' id='24' param='vert' type-v2='layout-flow' w='99030' x='485' y='941'>
                <zone fixed-size='34' h='4941' id='19' type-v2='title' w='99030' x='485' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='31055' id='3' is-fixed='true' name='Sheet 1' w='44659' x='485' y='5882'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22902' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]' type-v2='color' w='9697' x='89818' y='5882'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='31055' id='9' is-fixed='true' name='Sheet 3' w='44674' x='45144' y='5882'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='232' h='28239' id='15' is-fixed='true' name='Sheet 4' w='89333' x='485' y='36937'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22903' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]' type-v2='color' w='9697' x='89818' y='76156'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33883' id='10' is-fixed='true' name='Sheet 2' w='44659' x='485' y='65176'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22902' id='11' name='Sheet 2' pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1499417236592562176:nk]' type-v2='color' w='9697' x='89818' y='28784'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33883' id='12' is-fixed='true' name='Sheet 5' w='44674' x='45144' y='65176'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15882' id='13' name='Sheet 5' pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:support:qk]' type-v2='size' w='9697' x='89818' y='51686'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8588' id='14' name='Sheet 5' pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]' type-v2='color' w='9697' x='89818' y='67568'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{79464551-8E0D-4121-A8ED-16ADF13B967B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]</field>
            <field>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:itemsets:nk]</field>
            <field>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:support:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2A2EFBE-0BDF-4E95-BD1D-B43933EE8110}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1499417236592562176:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]</field>
            <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1499417236592562176:nk]</field>
            <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:antecedents:nk]</field>
            <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:confidence:ok]</field>
            <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:confidence:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFFB1580-1D03-44B2-9EA4-7D75CA322896}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052543918080:nk]</field>
            <field>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]</field>
            <field>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:itemsets:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{050377F7-FF6F-48DB-835B-2BB149DDD072}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C903480-F83D-4077-AF92-47CEE6901ECB}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:support:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]</field>
            <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[sum:lift:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFB1CF72-6CEB-4F33-B081-83B901CB4883}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <highlight>
            <color-one-way>
              <field>[federated.0xpxc670vwr3kl10kfno909q38kh].[none:Calculation_1310266052545028098:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <highlight>
            <color-one-way>
              <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1499417236592562176:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4'>
          <highlight>
            <color-one-way>
              <field>[federated.0pqp8wr14k03y81bjq73c1s31zhv].[none:Calculation_1310266052546838531:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AC3E77ED-178B-4719-BDDD-0C60D6D4E149}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eZBcx3ng+Xvv1X33VV19d+O+SQA8wAsED1H3Rdka2xu2xzEzsbvejfE6
      ZmYd3h3bmo2JmdiYmNhZz+7G2LIsS5YlUbREUSJFUiRAEiBx32gAfd/dVdV136/elftHNxqg
      CKAb3QABqOsXgUDXq/dlfpn5vlf5ZX6ZKQkhBDVqrFLku61AjRp3k5oB1FjV1AygxqrmYwYg
      hEBY1sc+L+YoWMUseip34xt+Jd2PpH3l3xK8EauUQ09mbnrPddO6ktctuDxGIoZZqi56n5mI
      YaTzN9LmmjKKRevxCvrUJMK4Wl9WMYeezC5R+uYYM5NYmrX4jfNoo0O3dD9c07a3ycXUp8Yx
      S+r1MrrmuTKpDg4jrKXn+TEDKL/1MlN/+G8wqxYgKLz0d0z/0b9dtOGMkV5Kxy/d+AarSuL/
      +v8+eik1xswf/i/M/of/SPzP/oLK5bFFFTYn+ikeOX/Te5L/5T8jfqW9rMwU0T/6IwrvnVk0
      jyuoh/dTnUwtrlMmgZEt3uBbQfLf/Smz//4/Ev+Lb1A6en5JRlB47aeYZX3hszF2kdLx3qUp
      vgilt15Bz+uL33gl78nxjxjjkqhkiP+bPyb784O3qN31MeMzWGXt419UcyT+n2/NfxDo4xO3
      ZADKN77xjW9ce0Efuojk9CDsIeyRIKWjZ5Ax8ex9ksp7b5D53o+oXBrBuW0b6sG30DNFcj96
      DXtPE0ZBxuYzKLx/Gmd3hNz3/o78GweQmzuoHttP6cNjVM6ex75pBzafC1HOoiUETf/qD3HU
      KagjaRxNTtJ/9U0KBw4i1zVjCzrJ/O3fkH/zHXDXY3PoaGkDR51Mfv8xnGvayH3/O+Rffwe5
      sRX9wmGK7x5GPXsWW/cWbCEvAJUPD+B46GnUM2fwPLITc3KA7CtvUdz/FupoAvf2jZTeeIXM
      D39MdWga1wPb0AcuIDX2UNn/U+SOTciKRvZHP8Pe4Cb1V9+k9MExbD0bITONJfmQzNzc9UNH
      sXVvwBbwAILK0ZM0/Mn/jv/Jh8l999u4dj+Gemw/me/9kErvEM6tWzHGLpH+5rcpHz+LY8s2
      tPMn0MbGKPz8F8gtXchmnuKHJyi//y5GSeBc20n17FHS3/571OFpXJs3oY/0kv7mtykdOYl9
      zQasxBDlcyOUfvEKStcWKgdfJ/PSK2iT07iffB6bxwZ6nvQPf4Frx2bK+19DeFswBk6R/tvv
      Uj7Xj3v3LtSTR3FsfYDymy9TPnuZ/CuvQKgVe1OQwk9+SPYnr1Ht68OxZTeyff65PHMYuXsn
      +sWzeB57BJFPkP7rv6Z44BByUztSeZbUX/0NpcMnsa/fgijESX/zbygdPYO9Zx2ySyb/8g/I
      vfoGSqQLKzaC3NyNFR8m/c2/pfThcWydaym//VPKx05TOXMR566HqZ47gXPbDvS+M6S/9R0q
      l0dwbtqMdvoghUMnKLz2KqbuwNHTjsQNfADnzoeonjuNNTuCElm3cN2+YRuBr3wZ2Uii9k9g
      JqOUjvdS989/FxkwpkfJ/OBVvPuepPLB20htO2j4H36Pws9+hvezX8KxaRvNf/6/4WwOLqSp
      nT/K7L/7P0i/8gH+Zx9D9gTwfeZz+Pc9QuGt/ZixUbSUTvBrX8O1pnXubRAdJ/O9n+Db9xTq
      0QPQuInG//mfUXjtVdz7Podz83qa/u2f4epuWngzVHpHcO98EFnkMCsmolLEMuw0/Ms/xhy5
      jBDg3L6L4Fe/jEgPUR2/+uZ3dEUoHT6J3ncWqa6F6pljyJH1BL/2FWwBN1Y+jVmoUD13HLlp
      DcHf+OqC4V2L5PLh7G5GT+ZwrNtC4MtfRpHzVC6NUTnyAfYtDxH4yudRXHNPkfuxZ6n7jecp
      n7oAgK1rA03/+o/Rz36APjtL/o0PaPjjf42r1UHh/VMoTa34v/Ql3BtbKL5/DFEqUNz/Hr6v
      /nfI1SnKg1ma/uRPcG/suKqUMNCnYnP1mohhqQald9/F/eRzBD7/KZDBmJlGWGDEZ7BvfYSG
      f/ablI+dQr90HC3nIPynf4JUTSHMK2kKKmcu4t61E3sA9GQJfbAXUw4R+I0XsUfqqZw8itK9
      leCLX0LxOcj/6Ef4fuP3qXvxObIv/xT18DtYjlbCf/KvcLQ1YibiWJqBXB/B/8Uv4tneTeHA
      YQJf+RqObTtp/vP/FbvfhTE9DUaF7E/eou5/+iO8WyPk3zqEmUkiN3bR9Mf/I+rxEwvFv64B
      SJ4GJC1N+eR53LsfmLtoGeRefhlhStga67GqGiDj+/SnUbyuuQqcnUHIbmS3HTOXQx++TPG9
      I7i2bLla37+Sl2PHHsJ/8WfUv7iX3M/3o578gErfOEpdHVgmSucWgi/sofLBfrKvvTvfUHEs
      nMgex1w+o/0U9h/CtW3bNRlczckqxFEvD5H8P/8D1aFRKucHAFAam5DtNmSXA4RK9oc/QWDD
      Vl+HqF7t+zt3P4524STl07149+zC8/wXcbb6yP/jDyj3ji7c59n3eVwdc2/F8rmhj9WrsEyM
      RAbF7yT3459gGQKlYa4u/S/+NopTI/e976COz4Jsw9bUgOTxIM0XRfEHkOxOlDofVrGAFGxE
      dtlx9HRjZrMU3/w5eqqI0tCI0Ob0dz++F0dLA1Y2M/dmtStINtv1mn2B0B/8C0Q+TuZb38RI
      V659MrA3NyO759rbKhaxtbaBLIF89VESWpHK+cuk//I/Ubk0SPlML44Hn8S3cw2lt35O4dBp
      vJ/9Ko56O/mX/oFK/wSWamGP1KNE2kArY+ayONauRbLZUbzuhbTL+3+BHsuhNDSCfrWNPvJc
      GVVwBVF8Lhzd3Zj5OZ/R1hxBcjmRpKu63qAmJFzrW8kdGSfy+cB8DgIrk0K9cBZ9ZBT3mscX
      7r2Cc+cTOEMlsq/8Ev+uXZS+/RMUvxOrZCDJNmQtTebvf4D/C1/CXjf3hjTG+sm99DLG5Ci2
      HXsR1Vn0sSil1DhCNzFGL1E6fgHFZUNSFAAcOx7BHbHI/uObBB7fSfHYS1ghNyJfBUlClnSy
      f/8P+D7zBRyRENWzp/H91j8n+MxurOQYqZcO4Xp+Cx9BWJipJOrZU2ij0zgev/qVZPfg6vJR
      icmEQi5K77yGNpVBcjg+0vCVw+9RHUvNX79aL0Ivk3/5JczYOHLXTuwhF1Y2TfXCefSxEVyt
      uyi98yZGwURyOD7SQNe2iXrqMJl4H1rBTqirm7L1Kpm/+x76xDDB3/9D1HcG0Ab6oJREBNd8
      RNrWtY7qD/6STH6S6qVRXF+c/0JxIVLjZL/3PaoX+gg+BoXXXkXYfHPlkD6uyUJ7b99N/j/9
      FxLnDmMmovjnr2uXz+J+4Z9Q9+V9WMUkyb96mWqDTuXyKJLdjiTLlN/bjzZbnCuvrOB+cD3p
      //e/IYkSzu1P4t4RIfnf/h7twhocWx9ayNMql9BT/Wh6DuGIgM0FqQmy33uZwNe+PK9YEEfI
      JP2t72LGxvG9+PuI8ePXL4T4FYx0QhjFirAqRaHNzAphWUKbnBKWEMLMZ0R1bFIY2ZQw8mVh
      JOLCrGhCCCHMYk7o6bywLFNUx8aEZVrCyKaEOjAozHJ17p5SQaiDQ8LUDCGEEJZWEWp/v1D7
      +4U2ExeWJYRlGqI6MiyMYklo01EhhCX0+IxQh8eEZZrCLOWFnsoKIay5fAxTGLm0UAcGhVFW
      59JVS3P5qnO66bNRYar6fAktUZ2cFGa5MJ+OENrUtLAsSxiZpKhOzggjNSuMUnXu/3JVWIYh
      im/+o8gfuTiXgmmI6tiIqE7HhSXEQn1YpiG08VFRnYoJa6FGLaGNj86VcTa1cNUsZEV1bEIY
      2bQwciVh6ZqoDg8t3KNHZ4Slm8JSS0JLpIVZKgg9nRLq0Igw9fn6M3RRHR4SerYw97laEerQ
      sDBLRaHFU/Ntkrvattm0qE5MCz02I0zNvHo9OSuqU1GhJ2LCVPW5dAYHhJ7Oz+kyPSUsUyzI
      WboqtFhCWGpRaImMMPMZEf/GN4ShzaeXmhVGsTJffEtoE1PCsiyhTU2I6vjc35api+rosNCi
      s3N1ZVlCm55cqNMrdaQODQtTM4Q+O6+bps6XsSS0WGLuvnxGqIMjwjJMoU1PXX2ORocX2nju
      uVaFEIbQpqILeUi1UIjFqRzeT2U4Q+h3voas3OSVuMoQxRTp73wfs1jFs+8FfI/uuNsq3TI1
      A6ixqqnNBNdY1dQMoMaqpmYANVY1NQMALMvEvIXp8+VgGMYdTb/G8rgaCiEEZ04e4R+/933S
      hoHD5Sfk89xU2DI0fvaj73L8cpwHtq4jMTnAO4dO0Nc/yNr161AkicvH3uaXJ/pJz8ZojLTi
      sCm3tQC56DDRokKdf25yJhsd5Z1DJ5icGMHmrmOo9wyhSCt25ca2PnPubU7ngvQ0fnz29tAH
      h+jq7OT02bO0RFqWrecPfvR9dmy78ShJcmqIdw+fZHJsBKe/kcD85OJKULMzDMRKNIV8K07r
      fqeYmeXwsRP86KWX0CU77W2tyLJ0zUSYJLHz4ccZPtPLnn37qBOCy+dOEkvn6Fy3nYCV4NRw
      Gkkrs2fvswQ9doxKnvW7nuTI0dMA/PLdI3z9d3+fiVNvc/TSNE9ta6dUyLN55zPs6q7HqpY4
      dfoSly+c4osvfp0zJ44h7F72Pvko4/0XGIumMCU7j2xqIVYNsLHFxemBOBtafRw7cwlvsJFH
      t3fz+v6jBNwK9e3rSV44wIVMHS88u4eNPe2cOHaEbU99me6GuYc5n/RgkySOvPc2ls2NobjY
      u2c3p44eoqxLeOsaicxXQTo2zulLw9Q1trF7x0YA/B4v+WSMH//kxxTyVR57fCdHD32AJhw8
      ve9Jjr7/FrLdQ1WzcNhlXIEmtnTVc+j4efz1YR5/aG4mPZeMcvD99/DUt9DsUKFxHW0BiTMX
      R9n94FZOHj3CA89/nfaQE4Djx47xyKOPcvHcWdZu2ciBN/fj9jhpWbOFBrnEqaEo6Cp79j6D
      KMQ41TuIPxTmkV0bOHviIr2XztMdcXFoqIJ44Rm2buj+ZJ60exRfXZh9+8IMDQyw74lHMasl
      Drx35MZdILOa4uxAnH37nuXYwXdIR0cJdm3lmSd28vqbBwBw+BvZ2BVZkNEsCbsEDeFGMvHk
      3EVhcuroh7x38AOKpSI/+MFL7P3si5zc/wvat+ykzkpw4vwAH5wZ4dlnniE1PUYhMcnoTAb0
      MpcGJ/jFG79k50MPMzt8jng6zWxJYu8zz3L21EHWrVvPgw/NPfwAT7/wec4dfIufv/4mBVVn
      cKgP3bQYHJni8SeeYGZkiMTwSaJGA3v3PkXfxVML+r/+y3d59OFH6D35IVfiDvsuXyLQGGHz
      li08vXcPZ99+ncCaHaxvsnjnSD+jM3GeePIpJmfGePKpp+i/fIrLJw4RaN/CIzu3LaTtr29m
      79P7GD13Am+4iQNvH2D4/FGq9rmZ9n2f/hyn3n2d1998m1LV4ML5uYjXob4+NL1KpmjyzLPP
      c+KD/aRmxgl2bua5px7kjTcO8MbbB3nmmWcxE8OMpbL88Lvf58kXvsADWzexbefDq/7hvx4H
      3nyNLQ8/dWMDEJaOrDiAq7PhiiIjyQrSQtTTR3HbQDUFsek4kY65wDUkhd17nmDf3ifxOGQe
      evxZOsMhCoUcY8ODGN4Ia5qc2N1eQIAASZaRYCGWPJ9JMTjQT8uarQRdCg6HA5CQAEVRsK6J
      fbY5fXzpK1/lhSc38+qr7y5cdzgcSJIEEhSzaeoam+Ziya/p+ueSs/T397Fl+66PVYw0XwmF
      YoHJsWESVS+7N7eiKAogYbPZFmpq57NfIWTM8oN/eInKvGqyLAMCRZZwBlpxVhN8cDHKw5vn
      AtMcnhBf+uqLPLWjk9feOTKn6zV1oCgyAuavSyjyXFsgLAQSsgROh0JVN9m5Zy89rY3IsoIw
      bzGMeZWg6SYuu/LxcOhMIkHrunW4bD6KyTGGRkdoX7MFezXJif4oielJnn7ueTwOG/lklKMn
      TjETjeHy1/Hw9nW8e/AIOdPNUw9vRZagnM/iqm+h3utEWAa5kkZXe4S29ggD/cPIkkRz1wa0
      xChj03GGRifY98wzXDp/hmw+h91bz+M7NzI8GUdCor21mULFors9TDqdZsv2nZw/eQSHN0Rd
      0Mf0aD/HT19gYjLOzsf2IPQyrW2d5HMZurq7yaTTbH/0KS58+A7JTI5oMsP29T0Y7kY2tYWY
      TmQRyHR1tSMD6XSaru4e9HyawckEjz21h8HeSyg2mfqmCJpaprurm3Q6vfC/SzYZm0ng8PhY
      v7YHWYLo+BBT0zFCbWtZ0xamwaNxblLnsZ1zXa3xoUucOtvLVDzFQ488gleuMjA2RSZbYMvW
      dRx46wAVNc/azbuwVZKc6J9gdmqap597jkjQwfGzvVRlP7u39ZDNlOjqbsfuDTJ47gQ4fDTW
      Be7CY3bvkUwkWLtuHR1tYQ4ePLz0meChE2+SCz/G7q7g4jevgB//6CW+9vV/ckfzMNUCB4+c
      xNRLBCIbeWTH+jua369iaCXe+OnP2fn8l2ivv/lAAwB6jh///DBfe/GzAAwef5d80w529zTc
      YU1//amFQtRY1dTmAWqsamoGUGNVUzOAGquamgHUWNXUDKDGqqZmADVWNfekAQghVrSj2O2Q
      Xwl3U361192tcvP9Me4SQgim+s9jLjOEWFjWfNjD8tbvWpaJLC8/avVuyq+87BayPBdusTz5
      5emu2Gx0bn4Q0zTnw0o+GW5bTqZpIiGwkDHUIum8SlNTA8LUkRQ7M9NTtLW1YpgCmyKh6yYg
      kLGoVMoUSxouv5+Q34ssSXzw47+jkr89e2HWuPdx+4L8zp//38QnRyjhZUNPG5ahMz4Zpbu7
      nb4LZ6lrW0ekYfkhHUJYVCoqDsVkOlHBIem3zwDSM+MkSzrIEg5ZpliuUsil0AwTSbbhsCmc
      PXGYdEmio62ecq6EK+jFZXfhcLrQNZ3RS71s37GTgMd5u9SqcV9hMDqRwCEn0XraUPNZ+i4O
      4ZWLXBiJ8Xhz94pSj0+NU9JNDLVCqiTT7Jdvnw9QF24mX1TR8xkawk1EWtvwuBwI00CSFRRF
      wReoY+3aHny+IM1NTTRHwsiyjCzLKIpCpLmJcrmyeGY1fk0RyLIN23zka6C+iZDPjVZV2bxj
      F8ODfStK3W63UalU8IUasGPgcHvvzVggy7IYOvUhhn6d3YCXgBDWQtjwcvOX5eW/G+6mvBBi
      rtQr8gE+ed1tdgcbHn6Kkf5eSsJDW0MAtVrg7LnL7Nj9CNGxflrXbKEtXLds3a7HPWsAldNn
      QF/6Ft7XIiwLaUWO3H1sALfFCZaxt7fh6OhYXOBXMAxjRU7sSuVvlZvmJISgXC7hdDiYnI7i
      Umx460P4PB7Uchmn242payAr2GQJS0BV0/G4nZSKZdweD6pawSZbxFIFWpsb0XQTLZ/C8tTh
      V3SSJYs6nxOH001VLeNweZAlyHzrb7EyNz8Io8adI/DiVxF+hXeO9NLRs54dm7q5dPYgZbOb
      pkCZ/v5+Hnzmi4S9t3eN9yfNTQ0gH5sipppQrZLJ5WkOBSgbFWaKZcZjs7S2tVMtV/H53Lgc
      MvlCjng8SWtnDy7ZoFzSiCYTRCItqCY4RJXzF/tYt3YdVrlKyjCxsLh4doLG5gilQoGtD+wi
      6K05wfcCkwNRnvj0pxg6fgroYdP2rZw4nKFlcxsjUzH8zntyGumWuGkJbE4HaqmE0xvAbVfA
      5qStrRWHw064uZVIUwPtnR10RoKkiiYhn5/OnrX4XTZK5TKy3UlzSzsd7W0owiBXKBFurEMg
      USmVcbtd2O0OGsMR2lpbaQx5yWYLn1TZayxC25owh956G9kXIpFIcvbkKXr7L/PO229hSTLm
      r8FyyzviAxRzaSanY3T0rMfntt+yvGVZlD/48CN79N8KQoiFNbXLwRIW8nW3KL/35Vda9rkB
      BBnHmh6ca9fesvz95gN8ok6wsCwsQFnEwbMsi0uzcQxreW8Ya34USFqFTvBiZfc47GxoDN9Q
      3jAMFEVZthHdbwZwW3MydA1TgF6t4nIoTKcyiKogHA5hc7jJp6KkSxqtkQgupwNZljAtgaaq
      ONxutHIZp8eLLMGrly6Q15b3C1DjxrQHgmxobOTdt94AX5h9TzzM7NQoZy5O8fRjW/nZ6wf5
      zd/68jJfHfcBQlAsFnG6nExOTt5eA+g9f5ZQIIjhcCKqOpLTjqjqnD83zpqN21A1C8lQiU6M
      UKnKdPY0EYulEJaCTbaYTabYsmNnzQm+4xTxB9cjk8cCmtt7CA7FcAfq6Qg33m3l7ijp2Rky
      ZQNNq1LIpW9vNGhTcwv1dQHKhSIOpxObYsNms9PYWEd8ZhyHJ4giSVR0C7/XztjoBJLNQaS1
      BZfTTUPIQzZXc4LvPD5ymX4ymkE6kWR8uI+Lly8yPDrKxb6LjEzG77aCdwyHw0G5VMTtDeBQ
      5E/OB8ikkvjrG7AtoW9pWRbnotPoy/YBxHw/eHnc3z7AzcvudTjY2nzjPU5rPsAdoq7hxj+t
      wjKx5nc7u4L9XAzUZc4Er3gk5P6Tb1wToePBNaQScfyhRhx2BcvUqeoCpw3SuRIN9XXLnSD+
      tcQwjE9+PUA+kyBbNqnz2knlVVrCIYYuD1DX0Uklm6GlowuXXWHq/BjVQi0wbqkoNoW6Vhvn
      +qexK1M89fhuRgdPMzHtwe/LY6gVKtufoKPevXhiv6ZYeoWyIVEuFHG7nYyPDn7yK8IKhQLV
      apWZ2RRuucrFoUk6uzowKiUq5QKjv8b9zztNMV9i7cYtOKW5vVvXbtqMS5GxFDsPbuokXVzd
      o2qyYmP0ci+T8QSJZAqnJ/DJG4DL5cI0TAIeJ+miQXtTgMnoLDabgmJ34vesfF/81Uq4q4vh
      c8cINLeRSCTpPXOBydlxmuoCHLwwzYYW/+KJ/Doj23F5fXSHfXiDTdSFQvdwNGiu9PFj5W9B
      XpLkZfd3TdOc3/X5/pG3Oe04vS5M00SW5RU5sTUn+B5gcmoEc7nh0ELASkaBhEBeUSjF7ZW3
      O51s2LqdUiGLKTkJ+NxUy0VKuiDgcZDKFAjXrfK3+zK54wZg6lUqusAyNIq5DHZvCMWskC5q
      hBtCOO0yqm5SLJQYHxth49YHqAt4iU9PoVXVO63efYHb42XD1s0cP3oSSbKz7/mnOXb8GKYl
      UGx23JJBSTzEmuY7u3P3/Uw5G+XkpRg7tvSgajpCK6O4g3feAGRFITo6jCyBcPiwklFkyY4p
      TGLxGA1+J4lMiWCkm6amMA0hP9Yyx/9/vdHx+ZsJMvdScPn8hFwyRcNOarIfuVCBmgHcEI/X
      SyTSQioeo6WrlclJFak0e+edYEm2gVEl3N4DagGHO4CMRiyZIeh1MZPIEaqvp87vweOykaqF
      Q98AFw6lQNruIpFI4ncqxAqC1sYAtkAr27pvHOBWA7C5MSpZfHWNuF1+bKKI/RNZE2yZxBIp
      Is1XG2g2OokuuWiLNF1fxLKoqsvv/liWORdOvMx++L3mBEuShMu9tPH7mhN8a9yVUSDTmNsr
      SBImhgX2Xzk61bIs/v7ktyhppeVlMO8EL5c7PZP727t+j4DdSyJTIBJuBCGYjccI1TcQnZ4E
      m5uuK2es3SI1A7g1lpSTZRlEp2fw+v0kUlk62yNMTExRF/TRPzzBxk2b8DkkVEOQSmdpjzQy
      PjFNpK2NZDyG3+ukfzzGtg09pLJFfIpOUpXoaAqQLlvIeolgQzPp2ShNrZ14nDaOjx8hU0nf
      6fLfFb687WsMn7mIJQkMeTceLcrAZB55fJqu1kbO9PYu2wBqXB9LqzA2FSVY34RWTGP3BrDL
      9qUZgDCr5EsG5UqCtkiIo8d7efThrYyNT9LS2kI5kyBhgFHOISSZvorK2rY6Bnp7sdweZEUh
      0tJKpVQkHZvAbGihvbWJqYlJhLAolnSquomua6hqFY/znh2dvW0IxcWGrkYSpTKyXqB7w1Zm
      hs5jMyts2Lbzbqv3a4ep5lF8jeQTY0zGKzSFdRS9sDQnWJLtRJqbaKwPMDaVYvvWNQyPjNEc
      aUUrF2mKRLDbXbS2RHB6/ETqfAwOjREIt+K22wjV1WOU8xiWwOMP4vd7mZqYoqWlhabmFgI+
      F8FQHQ6b8olvjnq3aG0OcLJvknDIgauhi8HTB2lq7aZo2Olpub1739QA2e4m4HXhr48QafAS
      DIawu3x3xgeoFHNMx9N093Rjk2+9L2lZFtlKhuVOBZvz4cTL7cWbpoWiLH+AbDH5oDuEIt/4
      V24l/eCaD3Br3LOhENaVDZ6WKX+/xvOvVP5Kva3GuluO4d+zne2VvIWuPAArGclZyTDm3ZRf
      adl/HeruVrgnfwFq1PikuGe39jL1KkODg6ja3CEZ0alxZlNZcqlZxqeiH/MOErFpZuJJANRy
      gcHhUTRNZXhwgGyhfPPMhMXo0AD50tzkW2o2ylR0FoRgYmJiUV2FZTAyNECxol2jSwq1VGBo
      eBRzkVeMZWgMDw5Srs6VNT4zQSyZIZOIMTw6gbXIOyoZn2Y6Nld2U68yPRNDWAbDg4MUl7Cq
      bnZmklhibsjZ0FSmo3EMTWVocIBccZEJSSEW2gZAr5aJxhNzesWmKGs3D2uxTH2u7PN6ZlNx
      ciWVSjHH8Mj4onW3Uu5ZA5idmSbc1sr0VBT0EkXdTi6dYDadQzHLVDTzmrtNsgUVtZDBFDA9
      E6et3sV0qkwkEiaRSN40r+LsFK5wB/GZKRCCdK5IpZgjn55lbGbxBTrZ6BT+5g5i09Ng6WRL
      OqV8moGBfkzTwLIWeYCjU9S3thGdngajQl6VKWSSxBNJ1GIWVb+ZvEUmr6IVMxgCNF0nm82Q
      jM1Q39I2N7F2U0xyJY1iNoUlQNN0ctkMSDKR5iYSicRNpS1Lo6xBLj13n6YbZDMZdLXI9OQY
      uYp5U/l0dIq6ljZmpqcBgaaWyeVLDAwMYJjGHR8VvGcNQJLmRjSY3+lYCGvh/BiLmxEAACAA
      SURBVCrLEr8ywiPNfXflQRMC07QwtQpT8Sxre26+y7EkSZiGiVgQn8snnkiil/NkizdfminJ
      c7qKK7pYc7oqdifhkItkdhF5ScIyDQQfLaslBE67Dd28+UMkhLVQdrfHh8OmIDGv0xKenyvl
      lQCPz49dmTvlZyZZYE13+yLSEtZ8eQG8Ph82WWI2Hsc0TTLZm5/ys9DOzO3mHQgEkACbw0W9
      10amcGdXsd2zPoBl6oyPT9LW0UG1qlMppFHcQRxo5CombS3hjxhBOhFDl1x4nQoOu8xULEW4
      3s9UdJaGpghN9TeJlBSCibFRGlo6sHQVU6tQMRVawg0UCgX8/pvH2gvLZGJ8nHBrB4ZWRVeL
      6JKLkEdhejZDd1fHTdcHWKbBxPgELe0daJpGtZRDOHzYLZVMSaOro+2m8plkjCpO/E4buqYy
      E0/Q2t5JLjVLuK0Tt+PmYx2p+AyW3YvLLqOrZWKJFHWhOvKFPA3NrTSGblJ+IZiNTc+1jQJa
      uUA8laNrzTocVDEUD277jd+zwjIYH58g0taBXlVJzcaoWjY6WuqJpwp0dd687CvlnjWAGjU+
      Ce7ZLlCNGp8ENQOosaqpGcA9iF4pcOrkSWbT+SXLFAq1hUTL4Z6dCV7NxMb6SWs2NkoqFwZS
      6MUkuVQG2R3AThUdJ00BO7PZCkGPQr4suHTxLF//nX9KQ9Bzt9W/r6gZwD1IU9cmJOc477x/
      BF9jK6XMFIrsxqElSQvwSAUGshKdQReXRlJ8/otfo5DPUB9Yvbu+LZdaF+heRJgkchr7nnuO
      1pCbB3fuIpuIsn7HboRaYMOO3ezbsxtXczefevopfE6Fnds3ka5tJXnL1IZB7wsEmqbjcDjQ
      NA2Hw3G3Ffq1oWYANVY1tS5QjVVNzQBqrGpqBlBjVVMzgBqrmpoB1FjVrGoDSKcX33hLmFUy
      2eItpy0sk4HLFxdWedW4N7lqAEJw5sRh/sOf/imvvfce47HUosJGJcdf/9f/zH/91ssAjPQe
      55Wfv8n3f/ASZX1uKdzAmSO8/tZ+3nn7bWazJT449B536pH48OAh9GtW4H3nm3/J2wfe46cv
      /4CR2Mfjan7xyzcWTdMsRXnn4Nmb3vPtb39n4e+LZw6TKhkcf+fnlJ2NWJUYJ04NLL0QNT5R
      roZCSBI7H36c4TO9PLFvH3VCcPTgfiqmIBTuJqykODpSwm0W2PHYc7Q3+kBSePF3fo9XXz8A
      wOHTffzO7/4eM70HOXJhnOd29dDf388DL/wmnfVejGqJd99+G9WU2LltEydPnWdgoJ/f/q3f
      5PjJM0hIPL7vWT5886cEmyKk8ipf+OyzvP/Lt5DdXnTJxSOb2jl8+hIWMp96fi/vvvkGdo+f
      Ldu3c2D/25QNk4cffZyQ1wE2F3v37kPK9POPJ/sZsaXY99xnuHj4Qzof3TNXbmHx/jtvUTVM
      Nu7aS3r0LBnVoq1zHRvXzK2GGu7r5W1nntZ1O5jqP8/zn/0cE+ePIFp2sCbsRb/mIA9Z1zBM
      ncNHTrNGrqc0keHgsSgur43tm9Z8ci1bY0ncsAtkVGKMJy327XuOvrPHKWYTdGzexac/tY/3
      330XAJvLR53v6pleuimQJfAGfBSzOQA++9WvM3jifV75yU/J6zY2btnM3n1PE3DCex+e5A/+
      xX/PsXffZc+zn+Lph9Zz4NApckWVx594Ei2dYnLwFEZoLU/vfYzY9Dhv/eIXeIIhipO9nBue
      YWQ8xrpN2wg3NLBp0xb2Pr1v7uFnLqry9Vdf5uV3LvCZvQ8wOTmBEJCciaLOLyFMDx/jzJRK
      fWMDv/j5awwND9MQbmNdT9tCudZu3MbzL3yaM8cOsjZs4/0zoxw+P0hnk/dj9ZaOT6HhZvOW
      LTz+1F4e2L6ZbTt21R7+e5QbGoAk27HMuV0OFqaKJaiWCzhcH294gJBbIV81GRmeZO2GbgB0
      S+K5T3+Opx/q4dDxXmySjDnfTXlw96P4XHacdoVq1aCqqjicTiT56r40siRhmSZCWJiWwG53
      0rVmHZ/9+j9la2cLv/8Hv0t+4hxvHbmMTeYjOyjY3X5eeOFT5NJzOzzYZBkQGNe8sRW7g8Zw
      hI2btvG7v/0Vvvwbv01zwM4/vPTjayoDhKmBZGftrmcYPvYz7N4wtiWs1JNlBxbLO+qpxp1H
      +cY3vvGNay8Yuk64vR2n4sZm5Om93MfWnY9h5ac40R8ln83z/HNPY1ck8skoR0+eoVQsIjk8
      PP7wg3x46AOkQCu7N/UgSRAdH+Tk2QvEMzpPP/EwbU0Bjh4/R3NrK4rNQSRcT0dPF6ePHiaa
      1dn35MNgmURaWjAMg56tO0mMnGciGmM2WeTFr3yWU8dPMJtMEW5u4szJE+RVwYMPbqcrEuTY
      yXOEWztw2mQMQ6e9ax27tq/n6MnzPLx9Pacv9KELmXUb16NYJj0bd1GJDzIxE0d2+JidHGJi
      JsG6jVsIN4QAwcTYOBNTU+x99lN4XE5GLpzgoRdepM5jB0DNpxgZnyRT0Ag3BAk2tmCXDOqb
      I3jcfhLTA5Qt+83XJde4Kyw5Fmi89wOK9Q+wtfWTPYzNqJY4fPQ4mqrSsnYHW9e1LS50B0lE
      xzl+YZTPvbBv2XuP1rh3qAXD1VjVrOp5gBo1agZQY1VTM4Aaq5qaAdRY1dQMoMaqpmYANVY1
      940BXNnBeLmyK8l3uXI1fe+c7O3S977ZF0gIQfGNNxGadsuyKz1za1myQiBgWUcN3Q19hWUh
      fdJ1tALZKw/xSuv3ugZQyqd4Z/8R1m/bxNq2ZtLFKiG/F6ddRtVMKpUqoYY6FCCfTpAum3S3
      hTl/9jSRjjU4bXP7u6fTWVqa64nGkjQ3N5EvqsiWis3lJ5dOEG5uZGI6Q0ezh1/uP8pTTz8F
      po7b60dYBqVinvHxCdZs2ELQ5yb36s8Q+aVvF1ijxmJc1wBcHjdbtm1HCI2xiSl8duhNpNnR
      6mV0JoMSaKG+XjAxPkKlajA9MUFj07O4PD7q/U4uDIzjd8o01ocY6O/H39zJ+MgIhqSg2J20
      OR1k0kmy+TJOtx+n08WGzduYGR+hs6OF6WQWozx3sILP5yfo97Ckkx5q1LhFrmsAkqTg8bix
      LAVMlXShSnPQzfBkDE+ggbqmBiQJOrvXkk8nqGuM4HMqeFx2kpkCba0tyHqJ6ViSoM/NzNQ0
      na1NaKZFOZsmmwXZ4cLlcOJ0OZAkBa/HjcPvwOvzU5wYwuZy4/e6MNUi2XyJkL+252WN288d
      jwXSynl0mw+vY2X+tmVZVPv7kRY5Luh6rOTg6+XKXnHSltO/vRv6mub84eLLiPC7G/palpg/
      PevWFb42zzvuBDs8AW7XRn4uA6RlrKe0hIR888MKb7usQEIIkJfxQN0NfS0hIVksK8L1rtSv
      AKSV6/sRAxBGlYmZOOFIK3o5h2x3k0qm6OhsZ2ZygqbmCPHZFK3NdUzF0rQ0BYmni7Q0Boin
      C7Q0hRjou0h922YafTLT8RSmWsLm9tEarmcmnqKtpYnpmTiR5kamY0naW5qIxlO0t7UiSWBU
      ywyPz7Bu3VqUX316LvSBeuuHpq3kt2e5shLLa5yV5LkS2buR50pkVxKKfm2eH+kCWfkZRkpe
      zFyMslom4PXQHAnTd/4yHTseJDnSh6br2D11yLKExyWj6jJ6MUVVM3D46+mK+FEJUUhO0N7V
      w8ToCD6njVi+iNA0TGRsksDh8iDZ7KBXUNUqnRu3I1UypLIFCuk4oY7NrGtvWlDUsiykH76K
      tAwDqFHjRnysCxSbnqSnvZmQXIdDMhmfmKatp5vE1CSBUB1l1aCxPsRsPIbT3UyxkCRQX09V
      s/A47UxFE7R01hMMeJmcjhIIhXAr0GBzUClXCfpcZAplmurrmE0k8AWCyHYdv9uOK9BKKFRm
      2uOns60RrVKe20FCsuFa5KTDGjWWw0d+AUS1QN7yEHQrd1On62JZFtJsCmkZPrtpmSjy8sq0
      XNkVOcF3QV/TMuec4GV0Lu6GvpaY68TL0srq9yOvVcnp53qrVq836ybmvZAlO+ErmBm9wlg+
      jWXd+ijQ/TxT+UnJ3pXZ8hXI3rGZYCEEUxNjNLZ0kIlPE2po5L39b+MLNtG5bh1dLWFmo1NI
      pkqi6mJNZwu5RJRAY4RiehZPqJFCKo6vvplSdpZAQwSPc27x+NT4CN76CEG3HUPImIZOKZ/B
      4atDNspkSjqNdQFsioRhCsqlIiMjI6zbtI2Q38P48AD6MkIhatS4ER/vWAuDUrFEdbgXe/1a
      JienWL9xKzagtSWMXk5RNJ3UKyqBQICxgQvMZjUipSLxaJpIu4ZkqBSLg0STRdp0mbVdbSBJ
      NDeHGYsmqetqY2JoEMVuw5TcmNlRFNmBKUymynlCXgfZUpVgYzt1dfXUBbwrCriqUeNGfPy3
      RwgUm52G1jVUM1M0hFtoaGigubme6EwCu7seSc1g2gM0hHxE2ntobQpQ3xChrbWRgN+PzaYQ
      bGylJRzC7/MupJvJl1nf04UkKwjToKVjDXarQqAujCLpxJMZGoJ+EtkKDQ1N1AW8BHxuMvkS
      sLLuU40a1+Pu7AphmaSyBRrqQwuXUrNRhN1LY13g+iKWhSRJyzICwzCw2ZY3irRcWSEElmWh
      KLfu4N0NfU1z3gm+T+rXsuad4GX4D9fmuagBVCoV3O654zdv1fEVQlytUCEoFIv4fP5bmm6/
      koZlWag/+5dQzS1deCENljXFvxLZK5W6nGzvir4rmFm9n+v3JqYnSESn6R+L8uCWtUzFktj0
      LAVHG60+k7Jhw+uwMCUnpVwKuyeAzapi2b1YlSwaDlKxSTrXbaGlqR7LstAqBSbyZdoa/RQ1
      galVyGfSOHx1SHqJbMUk3BDEbVeoaAb5fInJiVG273yYkN+DGTsPlcW3NK9RY6nc9LenUNZo
      bwkzPjaGbHdgc3ppb40wcu4ovvowmiroanNhilbKmTGmMkUawy247A7sSNQ1RWhpqsfUKoxN
      zqBVimSrMl2tTcyOXMJudyJcQcqFFIrsRMEknU4T8tjJFFTCnesxDa3mBNe4Y9zEACS8bjup
      gkZnVyczs1maWpuJzkbp6GhDw0FdwIvD5SY7dJGqsNHR0ozs8uL3OOdSMDWiiTSt4QbWrV1L
      fHaWzeFmQIAQRLrWEJ8YwRVsopKNE03k2b6+i3gqS6S5Ga/Thu6fc4JDfg/IdpBrM8I1bh8r
      doKFsJiZmqQu3Low3r8olkk6V6C+7qoTnE7EEHYvDaHr7z1ac4LvrGzNCf4VhKFSFQ5c9utn
      UCyV8Hmvv036UigU8vMO8dIq3LIs/v13D1Gs3PpEmEAsa4p/pbLL5W7oO+8Df6J5rlR2uVyb
      53VngkeH+vG7FAYSOus6W6jkEjh9IRw2G/lCgaDfjyksssk4BdWiLRxiKhqnvWcDspZnYipO
      Q0Md3mA95WKeVHIWS8h4/SG62iMYhoFk6fQPjbFxXSepVA5JElRLBSqWQp3Hxkwyw/r1m3Be
      Y4BD02lypVo0aI3bx8cNwCiAvZ66gEGnt55iapCZWIW2TheZbJyS5UEAuq7hdDgIOBVi6Ryd
      4QDZioGWzdLZWsfYZALJ4SWVSuGra0TNF5BMDYRFdGYKrVolFkuzbm03+VwKZDumoeOUNOJ5
      Gw0+B1VTsNReVY0ay+FjBiDZ/ChWnLweJOizIZROJCmG1+vHIUt0B32UhAPFrKIoCjJgr+S5
      2D9C57YwIa+Li31DRLo2kZ6dIVTfgNfrwedwICsykqzQ2dVDOjlL19oN2GQJnx1Mfxi5nKRs
      2QgKlaGxabYGI5SFvBAO7bApOGzLiTpc2Q/8ypZffNJ5Llf2btXR3a3f2zITXC0XSeRKtLU0
      o1dKzGYKtLVEljzBkclkCNXVLVRDqZClUDFpDjcsXLMsa8ERvlXu52jFT0p2tUaD3jcHZKxk
      FOhuNdBy1wPcLQO43+oXVpEB1KhxJ7hv9gYFKOXTXLzUR9UwEcJksP8y8WT2+jfPj2ZNx5IA
      FHNpRiejS8rHrJa42HuRXFlDCMHYyCAj41NLks0kYlweGMISAr1SpK+vj3hq8fgly9QZuHyJ
      RKYw99mo0j8wsqQ8S7kr9WKBMLjc20ssmVmSbGx6gqHRSYQQ6GqJvr5+Sks43V4Ii6H+y8QS
      GUAwPTHKubPn0Zaww0O1nOfixUuUqjrCMhjsv8zEdHxJ+iZj0/QPjWIJQaWY5dKlS+TLiw+N
      C8ug73If5vzrfmp8hLHJmfvLAOKJDBu7m5mZzVFJJ/A1d1LM3eBEey2L5WpCLc09fHaXF00t
      LimfyekYG7dsJhmbBqCtrR21XF6SbDpfoqPBxWxOw+7yYFcElXJlUbliZpa61jXk5490nZyY
      RDeWdrxqPJlhY3eYmdkcQqtQ0kzMJe6fVFJ1bOiYFoyODAMWmrZ4vlY5iRJsp5RPAxKtHd14
      vB6Wsv3TTCzBxg09xOMJLFOnWKqQzy8tyDFXUqn3yhQqBol4gpb2CJNLeDlZlpg/RhfApGrI
      oFfuLwOQsUhlctjtCrLdRjGbwTBu8MpRHFRLOTTdmJ/llNA1DctavMfnssmkUimEZMOyTPr6
      +unu6V6Sjqahk82VsNskVFWlKRyhUFi8cRWbnUIujSEkTFOjrFaZjUWpGos/yLKwSKVz2B0K
      ulBYt7aHbDKxJH11TUOtVhHCwuV00hhuJrUEWcnmRC1k0I05YytnZ/GEmhaVA3DIkEplkBQb
      elXF6Q1hGUub4DR0nUKxgixDc2srsYkJnN7Fdw2UZBnLNNANA9MUaFoFtarfXz6AZRokUhka
      64NopkSlkMETbMBlv/7QaC6dxO4JIiwNrVwiX6rQ3Np+w/uvIIRgNh6nqbmZSrlENpVCcnho
      jSzewIamks5XqPO7MIVEMpGgMdKCy77YdL8gOTtLoL4JXavg9XhRVRWXy7Vonpapk0hl5+sF
      8ukkgfom3EuYRFFLBSqGhNMu43a7iEXjhFsiKIs6l4JMMoE7UI9pVFFkBafLtaQBTWGZzCaS
      NDY2UtV0KsUcDk8Qv3fxsmpqmXxZx+9xgCSRSueIRMLIi+irV8vMxBJ4/SHcLhsYOqbsvL8M
      oEaN28191QWqUeN2UzOAGquamgHUWNXUDKDGqqZmADVWNTUDqLGqqRlAjVVNzQBqrGpqBlBj
      VVMzgBqrmpoB1FjV1AygxqqmZgA1VjUfMwBDq1JRl38Ki6FX0W4Sw24ZOlVtaYf9Fgs50uk0
      6nUXaFjMRGOLpmGZOul0mmw2j7WEwNdodOam3wthEY3G59OuEI8vvvJKrZTI5QuL7m9qmRoX
      z58lWyyjVq+2gVpMky6oi+ZTYxGEIJdJky+WuNIUHzOAQ/vf5JVf/HLZeRRScVL5X10BpXPw
      /cMAVItpppNLW/3z6k9/Qjab4f1fvkWm/KtGYHDmzIVF00iPXWD/0YvEo5McOHhk0fvPnDlz
      8xssgzPnzs9poOW40HvzZYtTQ72cON9PPDpDYZFd7QbOHsPe0IVHMZiamV24nouNMDpzg6Wf
      NZbMBwfe4NLQGMPDI5jzFvDRg7KFRU6TCMoaqimI9p9jKl+lLtRIV6OdD8+O0lhfx4MPbObD
      99/H7fHgrm+l1Sc4PzhNqL6BDp9FWvMil5NMxBJki1V2b+mkt/cCwYYG1rQ4yaRgqhJnJJbH
      0FQee/IJ3vzpK3StWUu6WOX5px8HwOUNsGbNWrTkJIl8hRMfvssLn3qBw+8f5OGn9wBQysQ4
      fn4IS6vw0JP7OPvhfjzBBjrXbqK5fm6f0XBLOxs3ddM/9BrCUDl55gLVQob2bXsYOn2Q+nAr
      k9NxvvCFzwCQmh5mNG0RkIukizqqLnj6sZ0cOPAuoVA9qn51Fdrk2BBHD5dx17WRnuznsec+
      w8zFY0gt2+hp8nHm0ihf+NIXkZhbl3rovQM43W4c/ia82iwTBQVFTdO97REu9w/gLig0bl1D
      PJmhyQcnekeQSzME1rdz8cxxiprAkBysb5I5NpinwVkl2LEVn5FiMlmkoSmM0ywSz1ZQNYun
      n9qz6GKRVYFQGZkp8HvPfQ4ANZ/gZ/sPf/QXoBgfpCoH6Gxyc7R3AlVVsYREpDmMqWlohklz
      SwulmQHkhnU88uhjTAxd5sSZS+zd+yQ7t2/GqKqomoGuVxFCYmJ4CH84Qnf3Gh7YthFh6lRU
      jfN9ozz1xB62dYW4ODSDwxtk1+7daKWrXYpCNsFrr/6Yac3L2mY/hcLcgvFSsbhwQMLp48eR
      7XYcokzvwBTlchm3L0hd4OoyuZH+83z/Bz9k+65HsSwTQzdw2wx6+yfQLJkHd+7CbxNoQGxq
      lIOnBtm9fR0nT53BblMY6+9jfOAUoTW72bXrgY/sl9rRvY49jz3B1Ggf2zZ2cOx0P5fHE3Q2
      +gCwLHNhlVQxOYbwtPLIo3uYGR2gqlVZt3k7Oza2EUuWWbOmh207dhJwKxTLFU6dOsdjTz3F
      1k3rkLA4eeY8NpuNkb7LVNQKHWs389ADm5mZmeXi4DhPPLaHzevXcOLkaex2G9PjQxSrt36q
      5q8lVhVLXH3fHz90kIeeeeGjBnDyTD8Pbu3G37qR5Mh52tdtZs+uHbx74B2cwQgvPPMEw6cP
      kpMClLIJdK2CJNsJeh2k8mWq1av7dp4+38eunQ/g97gAGYG5sKMvgNsmkS9rJJJZ6m6wI7Q/
      1MTzzz1DcmacsqojSxKmoVMoXV2gHgoFiHSsZc/TL7BzQzOP7f0U7Q0O/v/2zuS5jTO9w08D
      DTTQ2Br7QgIEJUokLVnyEo9mcTJTlRxSyVTNVCWXXFM5plL5M1I5JZX/IJdUcskpU1mnnIlr
      7MQzY3tEaShxBUAsRGNv7L3lQMmyRXpGJkCJsvBU8UAC/eLtj3j7e3/f9v74Jx999p4r67d4
      YyNHoVihsPURvuVNVnMZntQZeUJyOU9Y0qk0+gSCYW7efoM/+uMfEgwE6Tab6JMxhvnkOtOy
      GA+7OFwysdwm6u4HuINJnI++9emIj8NaG2M6QXD7GGotDH2C/QzHvMuSSFcbMhqNsBFQwlFu
      vfEGP/zB9xGfeqhLosBwojOZTAiEFF67eZsf/PAH+NyXr+bzC8EZRBJ6dAcThsMB8ViYo0r9
      81sibQ4PC+TzeQAODg6IhHzsHZQIxVIsx4NsP9jB6Qnw2sYalcIe9ZbGtc0b+Fxwb2sL0Rdm
      Je5nIPix+seU1R4eycPG5nVqhT2aI5v1lThNDeIhF1v3t5FDMa5dWaZULJPLZSkWi+RyOQD2
      D/a5snqFcb9FUR0RFCfU2kPcoov119YoF6tkl1Pcv3sXHZFr69c5LuzTHoxZW98k5PMw7qm0
      ph4ysQC72/dJr+R5cO8eihLC6Ysh6H2y2RyVUpFkNkulVCK7nOHhboFcOsK9B3v4QlE21vLs
      bm8xsURkn58r+SymOWLrk21Mp4PXbtzE43Ly3o/+mY13/4BU8KRGgm2ZPNy+z3AKG5ubdOol
      KmqbtfXXMAdNXMEkLqNLdyoh6l2kUBLZqVNWNTLxIHd/uYVLcpFYvoZk9Xm4X0SJpkiHXYyE
      EGGPSbU9JqFI3Lv/gFA8TSYsc297F28wwsa11UUK9IjpSOPnv/gEUVZ4+/YN7n3ys8We4HnS
      adTYKTV4582bL9qVBc/IIgAWvNIsJsIWvNIsAmDBK80iABa80iwCYMErzSIAFrzSLAJgwSvN
      SxMAjyuuzMLnZ6JflI3LcB+WZb1wH+ZhYx5tOfey65ZlYtsCTudJbH3VQsiWaWDZAuJTxfBs
      2+ZXH/w1pj44t2+2bZ+rpM5ls/Gir78oG9e/8Rd45Gc7Yv3x9XC+MkmP+eJq0OmQnWKVZCrN
      uNdEkgOoapPcSpZyqUg8kaSuNkklItTqbRKxAGpnRDrip9rokUko7O4+IL58A8VjUK53MMca
      DsnHUipKudpgOZPgqHxMMhGhpnZYTsUo11RW8iuIDgHbtjjYL5BbvYL01DHm1b1/RR+3zn2z
      Cy43V974U46qTbYLdb7zO+/iZsp7//Y+7/7h7zFRK9w9rPKdd96e62d+MQDGHVyhNPXyERND
      xzMYkcum+fSDD1m78y1KD7ewgIplnxSC6AnoY4OHO1XAwc5ozGouy9CCUrlKfvUqhcMDAk6T
      rQc7uAWBX95tIEkuKlUDw7Z5uLMDQG+QxBq2aXY02moVVyBKPh2Z680uuPxUVY23N7IcVVpc
      XVJQJC+GpXN/7wjsZ6vS81U4pQHKhX2CsQTpdJpkPMLefom1129SO9gnHEsgSn7CIT+2bSK5
      PVimSTKVxOsPEldkStUGkuQkFg5xUDwipCjIgSDL6RRuj4/VlWVcbg9hJYRgWyQTCVySD9nj
      IpbMcDWfZeXaTfLpCNPRkOFoyHCGHWoLXi4Ec8yD/QKSy8loPOZYPaZaqTDQety7v8uXFQQ6
      9+d9fi2QrQ8ZWhI+6fItobUsi8mgDpy/BUzTxOmc7d5mtTFL+dR5+WA+KhM6SwZ/EW0p+RLY
      pkmzOyAS9DE1DFS1gRwIEY8oTCZjJOlJFZnHInqWtpz7YrinRbCu67hcv7lUz2NMQ8fCgesp
      EWxZFr/66V9hzCSCLQRhtoGv2W3YjwqVzyJiZ/PhRHzCLBXaL6It17/xl3h8zy6CZwmA6XSK
      2+06QwQXqiRSaca9BpIviKo2WFnJcVQskkgmOK43SSciVNUOyeiJCE5FfNSaGum4wt7eiQgO
      SToVtXsigt2PRHCtwVI6QblSI5mIUlPbLKViVGoqK/k8okNAwKawv0/2LBG8/+8LEfw15uqb
      fwY8ewCcF2Ok8Q//+E/kVvJniGAljVo5YmoaSMMxK9nMExG8s4VlC1TqAqYxpas50Cc6O7tV
      BMHB7mjM6kqWoQlHlRr5K1cpHhziFy22Hp6I4LvNBh7JRbVmoVsWOzu7APQGE6xhi2ZHo1Wv
      Ii5E8IILot5QWb9xi1s3bp6eBygX9rm+uoxTsJAcFnv7Ra7dukn1cJ9I6r/LSQAACuNJREFU
      NEFHGxIO+mg0RrglCa0/JplK0euPCfllSpUGmVyYWCTEQeGIsKLgcdosS146HY1MOoDa6qKE
      gjRabZLJJK1OH9kj4glkUJQhQSVGOnkigg0AQcTjnvuUxYJXlGAgQOWjjzGn06dF8Iih5b68
      InjUQJhBspiWidMxo3Cb0YZt29jYOGbIn2f1wbTMRyL4/BrgItrSLUdxPMNe6cecVwPUS7s8
      OKygqo3zi+ATEeF+pvd+Wb3bpwWyaejgEHE6Tv9jLMvivyr/wtSanHrtWbkUM6CPm/trPBO8
      qbzOauA61UqZRHoJ0SGgT0YYiJhjjfZAZzmTxPyKqwSeZh6jQGd8uk21VEB3eAj7XNTbA+ir
      TAJpXltJUTjcR/JH6HaaJCNB2gODsN9No9VDEibURhK5iBvb5ScVDwMw7nept7rk0rGTUw6G
      A2RZplIq4JZDJGNBqmqHgAQOOUqvecxSLn8q7dnp3mdknn8UaMHzIeFNIdcmHI0ESrUed97e
      YOvn72P7NlhOOtm/+zM8yvcJP9vzc+7US7u8/9HJ4WZnht9YtzFMjerAJuF3cNSXWc5kwDqp
      rq11mgD0ehqlUh0zmySluKlrDjKZFMN2CYclYpk6B3v76KZB+bjNUjrBcfmQrjYlGI3g9viQ
      sDis1smG/RSOW9DsYQBSW2M5GX5ujbJgvvS6E66/8QY7v9gCHKxvbrBTBMkJ/Slgm8wyDDsL
      UiDMb3/3u8Sj0bMDoNdu4IukUDwClc6AfC5BtVJGySZoHFdILeWRXALToYaiKASDCm6PE0UU
      OFaPCXncTCwbh9PF1evr1GsVVtc2cAoCsiwTTy2hDQ18Hici4DKnHDW6ZFJJEBwc11WCfu9C
      BL/E5G+s8ZP33mPj1tuoaoO97W3UvgfJ6cfrC+ARHZx1LtPzYNLv8KMfv8/V1StnaQCbwWCI
      z+c7faVtMRiN8cny6dcuGMuyGM6Y/lyWmWBsG+EFzgRbj0TwLE/gX+eD2yHhdv7m/OarrhR+
      mlk0wP72pzw4qJzVAwhnf/kBBAc+Wf4KAthmPJ6cKYBty8SwODXj++v4ae3HL78IBmzsmUZg
      Lr0IDt/manB9JvsXzUQ3icZiTweATblwiOWSCXocNHpj9FYNRyLLtUycw4M95FCcblslpgTp
      jS2CXietTh/R7NO2FdJ+ELwhklEFgJHWodF2spyOUSsXsZxeivsPyK+sUFE7LGdz2OMethRA
      tMYIbj8iJrLHzRQRn+dJoO32thci+CUgKWe4yuUOgM2bb2Ja9ukeYGoKGNMeo75FRIKaqLC6
      nAJziuDy0mufCGBN63FYabKSSRDzO2iPA2QiGYb1fZyChGlMONg7RDd1qqpGJhGgOxbA7BCN
      J4hHQowFL4NOlUqtixKNIlhTNjZTtKolHlSGrF27/twbZsGrwQf/858MpsLpAOi2VJauXEd2
      WbR6Y65fVziuHCMnw6jHFa5tvI4Tk+moz9UrCpGQD7cTJEFErasEAgFwyzhFibX162i9HtfX
      AzgcAjG/C9MVQnaatAYGiUgI25Tx+7rYbh8+ScQhCERTS9juDg5jzNDgMxEclqJ4zVn0h83s
      Iw/zsDErs/pwse3gdT5/jfhVsUwLG+fTItjGNK0zxY1t21jW2a89DyzLQhCEmXLXWUXXPGw8
      3o87SzvO6oNpPpoJ/hq0JZxPBH/w3/9BU5s83QMIX/qPEYSzX9N6GoGgH63XJxA8+5jzJ9g0
      Gk2i0dipiVBN6xEIBD/7vd/t4AkoiJ+7tz//mx/RG86wOca2Z5qBnYuNx4+bmR7gc/Bh5g7g
      y334k9+9ye+/neXD//2IzdvvEA5IVA53cPgzTLtHlOoad+68M6MDsxEOKzR7Z4wCDbpNitUW
      qUSESuWYYDjIsNchGk9SLteJxGNMB21csoIx7NDSpvzWWzfZf7iNpMRQvE7afZ1oyEOzM8Dv
      c4PDQyYZ4fhYZTzscXhU583X8qidPu22RkTxUy0XkAIxQpJAZzDFKwqk/coXHNSGU3qD848C
      LXg+THSDwtYWV269ycP729y5cwtjOqRdbrO6HGF3d4/exCL47NtE5o7kkQkGg6e3RKqNFqtX
      8nRaTbRGkVrP5OpaFq3dJZbJofdblI5UppMhluglHDwZMlWiSTCnFAqHWIbOweEhlqkzmJgs
      Z5I4HE6CoRCy7MPv9+FweagV9jGNCdpIJxxN4HU70UZTQrLIcFHZ5KXG4RSYTMZYCICDWDwK
      gO1wEvC66I/PKnz4fOh324RTWfTR4HQPkFtZoVAsE4lFcYhuApE4DqeLRDqFw+XBllfwyjIu
      Xxhz1MN0+gABl2jhDaVYSkZpaTr5bJJ6+6QShyAIIDjx+30YhsF6RkEQILu6hs/rZip4ENGx
      EbD1Ma3+lNV8AnsyZCjwmQhejgdR/OdPgWYdf5+HjblkQHPwYXYJ/OU+BGUPuRtrfPzxJ9y6
      fRtVbXC4e8jA9BBuB7H9KZZCbmzrxTzkSoVddN0gtLLx8tQHWIjg+fnwqotgYzLgl/f3eX1z
      9fkFwKA/YGpMCSsnC9xG/S6G00PAK535fn08wnCIeN0niaJlWQj/93cI+vmPxlj0AHP2If89
      yH773DZe5CjQYy52hZltsfPwAYLbh8/tQhtqhJUwTfWY4XhCqfBLbrx1h37jCF3w4LIndAdT
      YpEg1VKZeD5PST0mkskTCXjBGIPxdA3iZ2ceo/ez2vha+WA9W8Hzy8yFng1qGxMsUcacjuj3
      +5/93R8IElYUAsEQbtGJ2+VG62looymKLFJRu+SWMwy6LQajAZXaYiP8govhQnsAweUh4hMR
      pPQXautKHi+2ZXBt8wYelxPdIxGOSIR9Iq3+lM0rMpXjFplUBtXpJhKLnVzoS8zUA1yGxXBz
      2BA2l8VwCLMlg7ZtI7i+ZNHkS8RCBD9nGwsRPD8bF6oBRv0BNlOQwsgusMwprc6Q2KNVnnBy
      sNF0ajCZjAkGg19m6teiTycIohvx0T7gXq9HMBhE67TxBsNfmAnmw7+FGQ7GmscijlltCMye
      g8/qwzzyXidA/ntYmbf54Kcfsn77DrGQh/LBQ5DTOMZ1dksq3/z2t3BdaKI9G6cCoFI6oNUd
      Ew6H8KBhKmHMYYt2t49aKzOYXCPhd7BXqhLwedkvVknGwwgli2giRbOhEg6HqDc0NjfXUOsN
      sE0sfczAcOATTZqtIanlOM1GG2vcg8ASUY+JNgVz0KHkcCO7naQD4S86aE5Ofs7J10qAXgYf
      bJPi1hZX37rD3taviH3zTRxOk0qxxY3XlwlUirRHJgnf5Ttl5DGnYlMbToj7BeqtwWencHrl
      APF4nFAohN/nodVokc2vMJ4YLC1lkGUf+VyCwu4BQ91gPB6SSGdxOZ0Me01G0ymHB0VMw2Cs
      W/jdTgqFQ0zTIhBUSKfiNBtNSqUSsj9EyCcy1ud8CuqCC8ElOhgOBpg2gEAkGkYA9rbvElm9
      fam//HCGBhhqHRq9MbFQAKdog+hHEk9SoP7IIOiXsUyDYqFEJpejUSvjC0Xxe0Wmuk2tWiaR
      SiOKEpLbyUjrYrtlpv02A11g2jtmp9Di3XffolZrkl1KUlPbuAUDS/QioTOyRCIBL4LgwPrc
      TLDw6d8jzCKCefGLoeczBn9JfFi+g528zaeffMz1G7cZ9LoU97fRdDeJkIjaHvDON7+D7D47
      B7oMGuC5i2DD0LFtAZfrq934QgTPz4eFCH7C/wODlOttIZbR9wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      Tj+zHgZC2LF+HjNowWYXz+gERVU+3yRbkiRUiwXpUVMwm1imo/k2S1KZ2QfINyTJBqyRSj/8
      sQw9TDzlenq5p8UKsRgZASDQUkl0RQKLFSkWf/Q5aOkUmiyxsSfUjqyukUgaCEAYYWJx5xMP
      GqCokEyReeRGPZNGMwx4qTPDNqy2KLHYZzpjRKI2nkoBKsuQ08jkHlabhq6Ry2RAUdDTS7Re
      vYNcc4h3zx0yDZBvyIqDAq/O0INZdD3FVGcbWvUuvE8awB1kr3WFW8NL5HSd4YFhCouKwFXI
      PvsqN4eWyBk6DwaH8AcKN/iGthMssTI4MIGuZZi920asoonAkwZwFNDkTHBncI6srjP5YAir
      y4/F8jIfIytltQUMdQ+QzuVYGuhmsaCW0icHnSwO6nwK94bGSes6y1NDxAwPXpfM6N0eqD/A
      sZ2VOCyKGQqRdwhBcnWCW9ebmVhN4S7byXffOYnfBpM9t5ixNHBydwXZ2CyXfn+J2UiWgurd
      vHXqEKUeK1p8josfX2QmksFXtYu33jpCqce6IROkIzO0Xr/JyGIce1E97377DMVulYWhVobi
      xZx8sx5Si1y/cImx5QSe0kZOnj5OpSvH3RuX6HywSDy0iuby47WV8u7fvk+t8/mvG8glV+i4
      fpW+6TAWfxWnz52hrshJdLaXtjGZkyf2YM2u0n7jGvcnV7EVVHDi3DnqCgS3P/oVHTNpHI+y
      9JkGMNnSmE0gky2NaQCTLY1pAJMtjWkAky2NaQCTLY1pAJMtjWkAky2NaQCTLY1pAJMtjWkA
      ky2NaQCTLY1pAJMtjWkAky2NaQCTLY1pAJMtjWkAky2NaQCTLY1pAJMtjWkAky2NaQCTLY1p
      AJMtjWkAky2NaQCTLc3/D7PMYFWwd5LvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      SwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
